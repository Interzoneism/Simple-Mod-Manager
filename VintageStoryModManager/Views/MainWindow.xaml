<Window x:Class="VintageStoryModManager.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:design="clr-namespace:VintageStoryModManager.Design"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:viewModels="clr-namespace:VintageStoryModManager.ViewModels"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:converters="clr-namespace:VintageStoryModManager.Converters"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=design:MainWindowDesignData}"
        Title="Simple VS Manager"
        Height="696" Width="1196"
        MinWidth="1200" MinHeight="775" Background="{DynamicResource GridBackground1}" WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <converters:BooleanToVisibilityConverter x:Key="IMM.VisibleWhenTrueConverter" />
        <converters:BooleanToVisibilityConverter x:Key="IMM.VisibleWhenFalseConverter" IsInverted="True" />
        <converters:BooleanToTabIndexConverter x:Key="IMM.BooleanToTabIndexConverter" />
        <converters:RowPaddingOffsetConverter x:Key="IMM.RowPaddingOffsetConverter" />
        <Thickness x:Key="IMM.RowPaddingBase">0,0,0,0</Thickness>
        <sys:Double x:Key="IMM.NormalRowHeightOffset">10</sys:Double>
        <sys:Double x:Key="IMM.CompactRowHeightOffset">-12</sys:Double>
        <sys:Double x:Key="IMM.ModDbCardScale">0.75</sys:Double>
        <converters:DownloadMetricDisplayConverter x:Key="IMM.DownloadMetricDisplayConverter" />
        <Style x:Key="IMM.DataGridCellBaseStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0,0,0,0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Padding" Value="8,6" />
        </Style>
        <Style x:Key="IMM.ModDatabaseAutoLoadToggleStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Padding" Value="8,0,8,0" />
            <Setter Property="FontSize" Value="15" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding SearchModDatabase}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <LinearGradientBrush x:Key="CardGradient" EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="#FFA9C0E9"/>
            <GradientStop Color="#FFEFF3F9" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="CardGradient2" EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="#FFA9C0E9"/>
            <GradientStop Color="#FFEFF3F9" Offset="1"/>
            <GradientStop Color="#FFD2DFF3" Offset="0.263"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="CardGradient3" EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="#FFBED0F1"/>
            <GradientStop Color="#FFEFF3F9" Offset="1"/>
            <GradientStop Color="#FFD2DFF3" Offset="0.263"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="CardDisabledGradient" EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="#FFC6CEDF"/>
            <GradientStop Color="#FFE6EAF3" Offset="1"/>
            <GradientStop Color="#FFD7DEE9" Offset="0.263"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="GridBackground1" EndPoint="1,0.5" StartPoint="0,0.5">
            <GradientStop Color="#FFE2EAF5"/>
            <GradientStop Color="#FFDFE3EA" Offset="1"/>
            <GradientStop Color="#FFD2DFF3" Offset="0.498"/>
        </LinearGradientBrush>
        <!-- Style for toggleable MenuItem that keeps the default look and feel -->
        <Style x:Key="ToggleMenuItemStyle" TargetType="MenuItem">
            <Setter Property="IsCheckable" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="12,0,12,0" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="templateRoot"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <Grid SnapsToDevicePixels="True"
                                  Grid.IsSharedSizeScope="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                </Grid.ColumnDefinitions>

                                <TextBlock x:Name="CheckMark"
                                           Margin="0,0,8,0"
                                           VerticalAlignment="Center"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="☐"
                                           Visibility="Collapsed" />

                                <ContentPresenter x:Name="Icon"
                                                  Margin="0,0,8,0"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Icon"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <ContentPresenter x:Name="HeaderHost"
                                                  Grid.Column="1"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True"
                                                  ContentSource="Header"
                                                  TextElement.Foreground="{TemplateBinding Foreground}" />

                                <TextBlock x:Name="InputGestureText"
                                           Grid.Column="2"
                                           Margin="24,0,0,0"
                                           VerticalAlignment="Center"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{TemplateBinding InputGestureText}"
                                           Visibility="Visible" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Icon" Property="Content" Value="{x:Null}">
                                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            </Trigger>

                            <Trigger Property="InputGestureText" Value="">
                                <Setter TargetName="InputGestureText" Property="Visibility" Value="Collapsed" />
                            </Trigger>

                            <Trigger Property="InputGestureText" Value="{x:Null}">
                                <Setter TargetName="InputGestureText" Property="Visibility" Value="Collapsed" />
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="CheckMark" Property="Text" Value="🗹" />
                            </Trigger>

                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="CheckMark" Property="Text" Value="☐" />
                            </Trigger>

                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Background="{DynamicResource GridBackground1}" Margin="0,0,0,8">

        <Grid.RowDefinitions>
            <RowDefinition Height="35" MinHeight="10" />
            <RowDefinition />
            <RowDefinition Height="Auto" MinHeight="40" />
        </Grid.RowDefinitions>
        <Grid x:Name="TOP" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>


            <Menu Grid.Column="0"
                  IsMainMenu="True"
                  BorderThickness="0" Margin="0,0,0,5" Background="Transparent">

                <MenuItem Header="_File" Height="35">
                    <MenuItem Header="Set _Data Folder..." Height="35" Click="SelectDataFolderMenuItem_OnClick" />
                    <MenuItem Header="Set _Game Folder..." Height="35" Click="SelectGameFolderMenuItem_OnClick" />
                    <MenuItem x:Name="DisableInternetAccessMenuItem"
                              Header="_Disable Internet Access"
                              Height="35"
                              IsCheckable="True"
                              Style="{StaticResource ToggleMenuItemStyle}"
                              Click="DisableInternetAccessMenuItem_OnClick" />
                    <Separator />
                    <MenuItem Header="E_xit" Height="35" Click="ExitMenuItem_OnClick" />
                </MenuItem>
                <MenuItem Header="_Mods" Height="35">
                    <MenuItem Header="_Refresh Mods" Height="35" Click="RefreshModsMenuItem_OnClick" />
                    <MenuItem Header="_Update All Mods" Height="35" Click="UpdateAllModsMenuItem_OnClick" />
                    <MenuItem x:Name="CacheAllVersionsMenuItem"
                              Header="Cache all versions locally"
                              Height="35"
                              IsCheckable="True"
                              Style="{StaticResource ToggleMenuItemStyle}"
                              Click="CacheAllVersionsMenuItem_OnClick" />
                    <MenuItem x:Name="DeleteCachedModsMenuItem"
                              Header="_Delete Cached Mods"
                              Height="35"
                              Click="DeleteCachedModsMenuItem_OnClick" />
                </MenuItem>
                <MenuItem Header="_Presets" Height="35">
                    <MenuItem Header="_Save Preset..." Height="35" Click="SavePresetMenuItem_OnClick" />
                    <MenuItem Header="_Load Preset..." Height="35" Click="LoadPresetMenuItem_OnClick" />
                    <Separator />
                    <MenuItem Header="Save _Modlist" Height="35" Click="SaveModlistMenuItem_OnClick" />
                    <MenuItem Header="Load _Modlist" Height="35" Click="LoadModlistMenuItem_OnClick" />
                </MenuItem>
                <MenuItem Header="_View" Height="35">
                    <MenuItem Header="_Compact View"
                              Height="35"
                              IsCheckable="True"
                              Style="{StaticResource ToggleMenuItemStyle}"
                              IsChecked="{Binding IsCompactView, Mode=TwoWay}" />
                    <MenuItem Header="_ModDB Design"
                              Height="35"
                              IsCheckable="True"
                              Style="{StaticResource ToggleMenuItemStyle}"
                              IsChecked="{Binding UseModDbDesignView, Mode=TwoWay}" />
                </MenuItem>
                <MenuItem Header="_Help" Height="35">
                    <MenuItem x:Name="EnableDebugLoggingMenuItem"
                              Header="Enable debug logging"
                              Height="35"
                              IsCheckable="True"
                              Style="{StaticResource ToggleMenuItemStyle}"
                              Click="EnableDebugLoggingMenuItem_OnClick" />
                    <MenuItem Header="Manager _Data Folder"
                              Padding="12,6"
                              Click="ManagerDataFolderMenuItem_OnClick" />
                    <MenuItem Header="Manager _Mod DB Page"
                              Padding="12,6"
                              Click="ManagerModDbPageMenuItem_OnClick" />
                </MenuItem>
            </Menu>


        </Grid>
        <Grid x:Name="MIDDLE" Grid.Row="1"
              Margin="16,10,16,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="0,-15,-27,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="290" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBox Grid.Column="1"
                         Margin="0,10,24,33"
                         MinWidth="200"
                         Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                         FontSize="14" HorizontalAlignment="Right" Width="227">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource IMM.SearchTextBoxStyle}">
                            <Setter Property="ui:ControlHelper.PlaceholderText" Value="Search installed mods" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SearchModDatabase}" Value="True">
                                    <Setter Property="ui:ControlHelper.PlaceholderText" Value="Search Mod Database" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <StackPanel Grid.Column="0"
                            Orientation="Horizontal"
                            VerticalAlignment="Top" Height="64" Margin="5,12,0,0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="292">
                    <Button Content="Installed Mods"
                            Command="{Binding ShowInstalledModsCommand}"
                            Width="138"
                            Height="63"
                            FontSize="16" Margin="0,0,1,0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="VerticalContentAlignment" Value="Top" />
                                <Setter Property="Background" Value="{StaticResource IMM.SurfaceAltBrush}" />
                                <Setter Property="BorderBrush" Value="{StaticResource IMM.BorderBrush}" />
                                <Setter Property="Opacity" Value="0.3" />
                                <Setter Property="ui:ControlHelper.CornerRadius" Value="12" />
                                <Setter Property="Padding" Value="12,6" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SearchModDatabase}" Value="False">
                                        <Setter Property="Opacity" Value="1" />
                                        <Setter Property="Background" Value="{StaticResource IMM.SurfaceBrush}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource IMM.BorderHoverBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="Mod DB"
                            Command="{Binding ShowModDatabaseCommand}"
                            Width="138"
                            Height="63"
                            FontSize="16" BorderBrush="#FFCAD7EB">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="VerticalContentAlignment" Value="Top" />
                                <Setter Property="Background" Value="{StaticResource IMM.SurfaceAltBrush}" />
                                <Setter Property="BorderBrush" Value="{StaticResource IMM.BorderBrush}" />
                                <Setter Property="Opacity" Value="0.3" />
                                <Setter Property="ui:ControlHelper.CornerRadius" Value="12" />
                                <Setter Property="Padding" Value="12,6" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SearchModDatabase}" Value="True">
                                        <Setter Property="Opacity" Value="1" />
                                        <Setter Property="Background" Value="{StaticResource IMM.SurfaceBrush}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource IMM.BorderHoverBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>

                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            VerticalAlignment="Top" Height="30" Margin="0,16,201,0">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SearchModDatabase}" Value="True" />
                                        <Condition Binding="{Binding SearchText}" Value="" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SearchModDatabase}" Value="True" />
                                        <Condition Binding="{Binding SearchText}" Value="{x:Null}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <RadioButton Content="Top downloads"
                                 GroupName="ModDatabaseAutoLoadMode"
                                 IsChecked="{Binding IsTotalDownloadsMode, Mode=TwoWay}"
                                 />
                    <RadioButton Content="Top downloads last 30 days"
                                 GroupName="ModDatabaseAutoLoadMode"
                                 IsChecked="{Binding IsDownloadsLastThirtyDaysMode, Mode=TwoWay}" Margin="10,0,0,0" />
                    <RadioButton Content="{Binding DownloadsNewModsRecentMonthsLabel}"
                                 GroupName="ModDatabaseAutoLoadMode"
                                 IsChecked="{Binding IsDownloadsNewModsRecentMonthsMode, Mode=TwoWay}" Margin="10,0,0,0" />
                </StackPanel>
            </Grid>
            <Grid Margin="0,32,25,0" Grid.RowSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <DataGrid x:Name="ModsDataGrid"
                          Grid.Row="1"
                          ItemsSource="{Binding CurrentModsView}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  IsReadOnly="False"
                  EnableRowVirtualization="True"
                  GridLinesVisibility="None"
                  SelectionUnit="FullRow"
                  SelectionMode="Single"
                  RowHeaderWidth="0"
                  BorderThickness="2,1,2,1"
                  IsSynchronizedWithCurrentItem="True" MinColumnWidth="20"
                  SelectionChanged="ModsDataGrid_OnSelectionChanged" Foreground="Black"
                  PreviewKeyDown="ModsDataGrid_OnPreviewKeyDown"
                  PreviewMouseLeftButtonDown="ModsDataGrid_OnPreviewMouseLeftButtonDown"
                  PreviewMouseWheel="ModsDataGrid_OnPreviewMouseWheel"
                  Sorting="ModsDataGrid_OnSorting"
                  RowBackground="White"
                  HorizontalGridLinesBrush="Transparent"
                  VerticalGridLinesBrush="Transparent"
                  HeadersVisibility="Column"
                  ui:ControlHelper.CornerRadius="10"
                  FontSize="15" Margin="0,0,-29,0">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type ScrollBar}">
                            <Setter Property="Background" Value="{StaticResource IMM.SurfaceAltBrush}" />
                        </Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Background" Value="{StaticResource IMM.SurfaceAltBrush}" />
                            <Setter Property="BorderBrush" Value="{StaticResource IMM.BorderBrush}" />
                            <Setter Property="BorderThickness" Value="1,0,0,1" />
                            <Setter Property="Foreground" Value="{StaticResource IMM.ForegroundBrush}" />
                            <Setter Property="Margin" Value="0,0,0,6" />
                            <Setter Property="Padding" Value="12,10" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                        <Border x:Name="HeaderBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="True">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter Grid.Column="0"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                <Path x:Name="SortArrow"
                                              Grid.Column="1"
                                              Width="6"
                                              Height="6"
                                              Margin="6,0,0,0"
                                              Fill="{TemplateBinding Foreground}"
                                              Stretch="Uniform"
                                              Visibility="Collapsed"
                                              VerticalAlignment="Center" />
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetName="HeaderBorder"
                                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                    To="{StaticResource IMM.ButtonHoverColor}"
                                                                    Duration="0:0:0.15">
                                                                <ColorAnimation.EasingFunction>
                                                                    <QuadraticEase EasingMode="EaseOut" />
                                                                </ColorAnimation.EasingFunction>
                                                            </ColorAnimation>

                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation Storyboard.TargetName="HeaderBorder"
                                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                    To="{StaticResource IMM.SurfaceAltColor}"
                                                                    Duration="0:0:0.15">
                                                                <ColorAnimation.EasingFunction>
                                                                    <QuadraticEase EasingMode="EaseOut" />
                                                                </ColorAnimation.EasingFunction>
                                                            </ColorAnimation>

                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                            <Trigger Property="SortDirection" Value="Ascending">
                                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                                <Setter TargetName="SortArrow" Property="Data" Value="M 0 3 L 3 0 6 3 Z" />
                                            </Trigger>
                                            <Trigger Property="SortDirection" Value="Descending">
                                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                                <Setter TargetName="SortArrow" Property="Data" Value="M 0 0 L 3 3 6 0 Z" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Background>
                        <SolidColorBrush Color="{DynamicResource IMM.SurfaceColor}"/>
                    </DataGrid.Background>
                    <DataGrid.CellStyle>
                        <StaticResource ResourceKey="IMM.DataGridCellBaseStyle"/>
                    </DataGrid.CellStyle>
                    <DataGrid.Style>
                        <Style TargetType="{x:Type DataGrid}">
                            <Setter Property="CanUserSortColumns" Value="True" />
                            <Setter Property="Visibility" Value="Visible" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SearchModDatabase}" Value="True">
                                    <Setter Property="CanUserSortColumns" Value="False" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SearchModDatabase}" Value="True" />
                                        <Condition Binding="{Binding UseModDbDesignView}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Style>
                    <DataGrid.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource VS.DialogTitleBarColor}" />
                    </DataGrid.BorderBrush>
                    <DataGrid.RowHeaderStyle>

                        <Style/>
                    </DataGrid.RowHeaderStyle>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="{StaticResource IMM.RowBorderBrush}" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Margin" Value="10,2,10,2" />
                            <Setter Property="Padding">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource IMM.RowPaddingOffsetConverter}">
                                        <Binding Source="{StaticResource IMM.RowPaddingBase}" />
                                        <Binding Source="{StaticResource IMM.NormalRowHeightOffset}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Height" Value="{x:Static sys:Double.NaN}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                                        <Border x:Name="RowBorder"
                                            Background="{DynamicResource CardGradient3}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="8"
                                        Margin="4,0,4,4"
                                        SnapsToDevicePixels="True">
                                            <Border.Effect>
                                                <DropShadowEffect Color="#33000000" BlurRadius="2" Direction="210" ShadowDepth="2" Opacity="0.5"/>
                                            </Border.Effect>
                                            <Grid>
                                                <Border x:Name="SelectionOverlay"
                                                Background="{StaticResource IMM.AccentBrush}"
                                                Opacity="0"
                                                CornerRadius="8"
                                                IsHitTestVisible="False" />
                                                <Border x:Name="HoverOverlay"
                                                Background="{StaticResource IMM.SuccessBrush}"
                                                Opacity="1"
                                                CornerRadius="8"
                                                IsHitTestVisible="False" />
                                                <Border Padding="{TemplateBinding Padding}"
                                                Background="Transparent"
                                                CornerRadius="8">
                                                    <SelectiveScrollingGrid>
                                                        <SelectiveScrollingGrid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                        </SelectiveScrollingGrid.ColumnDefinitions>
                                                        <SelectiveScrollingGrid.RowDefinitions>
                                                            <RowDefinition Height="*" />
                                                            <RowDefinition Height="Auto" />
                                                        </SelectiveScrollingGrid.RowDefinitions>
                                                        <DataGridCellsPresenter Grid.Column="0"
                                                                         SelectiveScrollingGrid.SelectiveScrollingOrientation="Both" />
                                                        <DataGridDetailsPresenter Grid.Column="0"
                                                                          Grid.Row="1"
                                                                          SelectiveScrollingGrid.SelectiveScrollingOrientation="Horizontal"
                                                                          Visibility="{TemplateBinding DetailsVisibility}" />
                                                    </SelectiveScrollingGrid>
                                                </Border>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding HasErrors}" Value="True">
                                                <Setter TargetName="RowBorder" Property="Background" Value="#7FFF0000" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding HasActivationError}" Value="True">
                                                <Setter TargetName="RowBorder" Property="Background" Value="#7FFF0000" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsActive}" Value="False">
                                                <Setter TargetName="RowBorder" Property="Background" Value="{DynamicResource CardDisabledGradient}" />
                                                <Setter TargetName="RowBorder" Property="Opacity" Value="0.5" />
                                            </DataTrigger>
                                            <Trigger Property="DetailsVisibility" Value="Visible">
                                                <Setter TargetName="RowBorder" Property="BorderThickness" Value="2,2,2,2" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                    <Condition Property="IsSelected" Value="False" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="RowBorder" Property="BorderBrush" Value="{StaticResource IMM.AccentBrush}" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <EventSetter Event="UIElement.PreviewMouseLeftButtonDown" Handler="ModsDataGridRow_OnPreviewMouseLeftButtonDown" />
                            <EventSetter Event="FrameworkElement.Loaded" Handler="ModsDataGridRow_OnLoaded" />
                            <EventSetter Event="FrameworkElement.Unloaded" Handler="ModsDataGridRow_OnUnloaded" />
                            <EventSetter Event="UIElement.MouseEnter" Handler="ModsDataGridRow_OnMouseEnter" />
                            <EventSetter Event="UIElement.MouseLeave" Handler="ModsDataGridRow_OnMouseLeave" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.IsCompactView, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                    <Setter Property="Padding">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource IMM.RowPaddingOffsetConverter}">
                                                <Binding Source="{StaticResource IMM.RowPaddingBase}" />
                                                <Binding Source="{StaticResource IMM.CompactRowHeightOffset}" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding HasErrors}" Value="True">
                                    <Setter Property="Background" Value="#7FFF0000" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding HasActivationError}" Value="True">
                                    <Setter Property="Background" Value="#7FFF0000" />
                                </DataTrigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{StaticResource IMM.RowSelectionBrush}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource IMM.AccentBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn x:Name="ActiveColumn" Header="Active" SortMemberPath="ActiveSortOrder" Width="90" MinWidth="85">
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Padding" Value="0" />
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid HorizontalAlignment="Center">
                                        <ui:ToggleSwitch IsOn="{Binding IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 HorizontalAlignment="Center"
                                                 Toggled="ActiveToggle_OnToggled"
                                                 PreviewMouseLeftButtonDown="ActiveToggle_OnPreviewMouseLeftButtonDown"
                                                 PreviewMouseLeftButtonUp="ActiveToggle_OnPreviewMouseLeftButtonUp"
                                                 PreviewMouseMove="ActiveToggle_OnPreviewMouseMove"
                                                 Margin="12,0"
                                                 OnContent="{x:Null}"
                                                 OffContent="{x:Null}">
                                            <ui:ToggleSwitch.Style>
                                                <Style TargetType="{x:Type ui:ToggleSwitch}">
                                                    <Setter Property="IsEnabled" Value="{Binding CanToggle}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding DataContext.SearchModDatabase, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ui:ToggleSwitch.Style>
                                        </ui:ToggleSwitch>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn x:Name="IconColumn" Header="Icon" Width="76" IsReadOnly="True">
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Padding" Value="0,0,12,0" />
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Border Width="64" Height="64"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    ToolTipService.ShowDuration="60000"
                                    ToolTipService.InitialShowDelay="200">
                                        <ToolTipService.ToolTip>
                                            <TextBlock Text="{Binding Tooltip}"
                                               FontFamily="Segoe UI"
                                               FontSize="12"
                                               FontWeight="Normal"
                                               TextWrapping="Wrap" />
                                        </ToolTipService.ToolTip>
                                        <Image Source="{Binding Icon}" Stretch="Uniform" Margin="0" />
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Name" Binding="{Binding DisplayName, Mode=OneWay}" Width="220" SortMemberPath="DisplayName" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="FontFamily" Value="Segoe UI" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Setter Property="ToolTipService.ShowDuration" Value="60000" />
                                    <Setter Property="ToolTipService.InitialShowDelay" Value="200" />
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="TextAlignment" Value="Left" />
                                    <Setter Property="Margin" Value="15,0,0,0" />
                                    <Setter Property="ToolTipService.ToolTip">
                                        <Setter.Value>
                                            <TextBlock Text="{Binding Tooltip}"
                                               FontFamily="Segoe UI"
                                               FontSize="12"
                                               FontWeight="Normal"
                                               TextWrapping="Wrap" />
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn x:Name="InstalledColumn" Header="Installed" Width="85" IsReadOnly="True" Visibility="Collapsed">
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="✓"
                                       Foreground="#FF2E7D32"
                                       FontSize="16"
                                       FontWeight="Bold"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsInstalled}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn x:Name="VersionColumn"
                                     Header="Version"
                                     Binding="{Binding VersionDisplay, Mode=OneWay}"
                                     Width="85"
                                     IsReadOnly="True"
                                     MinWidth="80">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="TextAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Latest Version" Binding="{Binding LatestDatabaseVersionDisplay, Mode=OneWay}" SortMemberPath="LatestVersionSortKey" Width="140" MinWidth="139" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Padding" Value="4,2" />
                                    <Setter Property="Margin" Value="2" />
                                    <Setter Property="ToolTipService.ShowDuration" Value="60000" />
                                    <Setter Property="ToolTip">
                                        <Setter.Value>
                                            <ToolTip MaxHeight="600"
                                                 Padding="0">
                                                <Border MaxHeight="600"
                                                    ClipToBounds="True">
                                                    <ItemsControl ItemsSource="{Binding NewerReleaseChangelogs}">
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <StackPanel Margin="0,0,0,12">
                                                                    <TextBlock Text="{Binding Version}" FontWeight="Bold" Margin="0,0,0,4" />
                                                                    <TextBlock Text="{Binding Changelog}" TextWrapping="Wrap" />
                                                                </StackPanel>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                </Border>
                                            </ToolTip>
                                        </Setter.Value>
                                    </Setter>
                                    <EventSetter Event="FrameworkElement.ToolTipOpening" Handler="LatestVersionTextBlock_OnToolTipOpening" />
                                    <EventSetter Event="FrameworkElement.ToolTipClosing" Handler="LatestVersionTextBlock_OnToolTipClosing" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ShouldHighlightLatestVersion}" Value="True" />
                                                <Condition Binding="{Binding DataContext.SearchModDatabase, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" Value="{StaticResource IMM.SuccessBrush}" />
                                            <Setter Property="Foreground" Value="{StaticResource IMM.ForegroundBrush}" />
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{Binding HasNewerReleaseChangelogs}" Value="False">
                                            <Setter Property="ToolTip" Value="{x:Null}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn x:Name="DownloadsColumn"
                                     Width="120"
                                     MinWidth="110"
                                     IsReadOnly="True">
                            <DataGridTextColumn.Header>
                                <TextBlock Text="{Binding DataContext.DownloadsColumnHeader, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.Binding>
                                <MultiBinding Converter="{StaticResource IMM.DownloadMetricDisplayConverter}">
                                    <Binding Path="DataContext.IsShowingRecentDownloadMetric" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" />
                                    <Binding Path="DownloadsDisplay" />
                                    <Binding Path="RecentDownloadsDisplay" />
                                </MultiBinding>
                            </DataGridTextColumn.Binding>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>



                        <DataGridTextColumn Header="Authors" Binding="{Binding AuthorsDisplay, Mode=OneWay}" Width="150" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextWrapping" Value="NoWrap" />
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="TextAlignment" Value="Center" />
                                    <Setter Property="ToolTipService.ShowDuration" Value="60000" />
                                    <Setter Property="ToolTipService.InitialShowDelay" Value="200" />
                                    <Setter Property="ToolTipService.ToolTip">
                                        <Setter.Value>
                                            <TextBlock Text="{Binding AuthorsDisplay}"
                                               FontFamily="Segoe UI"
                                               FontSize="12"
                                               TextWrapping="Wrap"
                                               MaxWidth="300" />
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn x:Name="StatusColumn" Header="Status" Width="100" IsReadOnly="True" SortMemberPath="StatusSortOrder">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid HorizontalAlignment="Center"
                                      VerticalAlignment="Center">
                                        <Viewbox x:Name="StatusIconViewbox"
                                             Width="30"
                                             Height="30">
                                            <Grid Width="24"
                                              Height="24">
                                                <Grid x:Name="ErrorIcon"
                                                  Visibility="Collapsed">
                                                    <Ellipse Fill="#FFD13438"
                                                         Width="24"
                                                         Height="24" />
                                                    <Line X1="7" Y1="7" X2="17" Y2="17" Stroke="White" StrokeThickness="3" StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
                                                    <Line X1="17" Y1="7" X2="7" Y2="17" Stroke="White" StrokeThickness="3" StrokeStartLineCap="Round" StrokeEndLineCap="Round" />
                                                </Grid>
                                                <Canvas x:Name="WarningIcon"
                                                   Width="24"
                                                   Height="24"
                                                   Visibility="Collapsed">
                                                    <Polygon Points="12,2 22,20 2,20"
                                                         Fill="#FFE17E00" />
                                                    <Rectangle Width="3"
                                                           Height="8"
                                                           Fill="White"
                                                           Canvas.Left="10.5"
                                                           Canvas.Top="8" />
                                                    <Ellipse Width="3"
                                                         Height="3"
                                                         Fill="White"
                                                         Canvas.Left="10.5"
                                                         Canvas.Top="17" />
                                                </Canvas>
                                            </Grid>
                                        </Viewbox>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding DataContext.IsCompactView, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                            <Setter TargetName="StatusIconViewbox" Property="Width" Value="22.5" />
                                            <Setter TargetName="StatusIconViewbox" Property="Height" Value="22.5" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding StatusText}" Value="Error">
                                            <Setter TargetName="ErrorIcon" Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding StatusText}" Value="Warning">
                                            <Setter TargetName="WarningIcon" Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                    <Setter Property="ToolTip" Value="{Binding StatusDetails}" />
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <ListView x:Name="ModDatabaseCardsListView"
                      ItemsSource="{Binding CurrentModsView}"
                      Background="{DynamicResource IMM.SurfaceBrush}"
                      BorderThickness="1,1,1,1"
                      Margin="0,32,0,0"
                      SelectionMode="Single"
                      SelectionChanged="ModDatabaseCardsListView_OnSelectionChanged"
                      PreviewMouseWheel="ModsDataGrid_OnPreviewMouseWheel"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      ScrollViewer.CanContentScroll="False" Grid.RowSpan="2" BorderBrush="#FFCAD7EB" FontSize="16">
                <ListView.Style>
                    <Style TargetType="{x:Type ListView}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SearchModDatabase}" Value="True" />
                                    <Condition Binding="{Binding UseModDbDesignView}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Style>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"
                                   HorizontalAlignment="Center"
                                   Margin="0,20,0,0"
                                   ItemWidth="{Binding ConverterParameter=496, Converter={StaticResource IMM.ScaledDoubleConverter}, Source={StaticResource IMM.ModDbCardScale}}" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <EventSetter Event="UIElement.PreviewMouseLeftButtonDown" Handler="ModDatabaseCard_OnPreviewMouseLeftButtonDown" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type viewModels:ModListItemViewModel}">
                        <Border Width="480"
                                Height="480"
                                Margin="{Binding LayoutTransform.(ScaleTransform.ScaleX), ConverterParameter=0\,0\,16\,16, Converter={StaticResource IMM.ScaledThicknessConverter}, RelativeSource={RelativeSource Mode=Self}}"
                                CornerRadius="12"
                                ClipToBounds="False">
                            <Border.LayoutTransform>
                                <ScaleTransform ScaleX="{StaticResource IMM.ModDbCardScale}"
                                                ScaleY="{StaticResource IMM.ModDbCardScale}" />
                            </Border.LayoutTransform>
                            <Border.Effect>
                                <DropShadowEffect Color="#33000000"
                                                  BlurRadius="20"
                                                  Direction="270"
                                                  ShadowDepth="8"
                                                  Opacity="0.2" />
                            </Border.Effect>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="White" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="Background" Value="{DynamicResource CardGradient3}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource IMM.AccentBrush}" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource IMM.AccentBrush}" />
                                            <Setter Property="BorderThickness" Value="2" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Border x:Name="CardImageContainer"
                                        CornerRadius="12,12,0,0"
                                        ClipToBounds="True">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="/VintageStoryModManager;component/Resources/mod-default.png"
                                                                Stretch="UniformToFill"
                                                                AlignmentX="Center"
                                                                AlignmentY="Top" />
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasModDatabasePreviewImage}" Value="True">
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <ImageBrush ImageSource="{Binding ModDatabasePreviewImage}"
                                                                        Stretch="UniformToFill"
                                                                        AlignmentX="Center"
                                                                        AlignmentY="Top" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Grid>
                                        <TextBlock Text="Installed"
                                                   Margin="8"
                                                   Padding="6,2"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Top"
                                                   FontSize="12"
                                                   FontWeight="SemiBold"
                                                   Foreground="White"
                                                   Background="#CC2E7D32">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsInstalled}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </Border>

                                <Border Grid.Row="1"
                                        Background="#CCFFFFFF"
                                        Padding="12,10,12,12"
                                        CornerRadius="0,0,12,12">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <StackPanel Grid.Column="0"
                                                    Grid.RowSpan="2"
                                                    Orientation="Vertical">
                                            <Button Command="{Binding OpenModDatabasePageCommand}"
                                                    FontSize="24"
                                                    FontWeight="SemiBold"
                                                    Padding="0"
                                                    Margin="0,0,0,4"
                                                    Background="Transparent"
                                                    BorderThickness="0"
                                                    HorizontalAlignment="Left"
                                                    Cursor="Hand"
                                                    IsEnabled="{Binding HasModDatabasePageLink}">
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Foreground" Value="{DynamicResource IMM.ForegroundBrush}" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <ContentPresenter RecognizesAccessKey="True" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource IMM.AccentBrush}" />
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="#66000000" />
                                                                <Setter Property="Cursor" Value="Arrow" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                                <StackPanel Orientation="Horizontal"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Left"
                                                            Margin="0">
                                                    <TextBlock Text="{Binding DisplayName}"
                                                               VerticalAlignment="Center"
                                                               TextTrimming="CharacterEllipsis"
                                                               TextWrapping="NoWrap"
                                                               Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                                                    <TextBlock Text="&#xE71B;"
                                                               FontFamily="Segoe MDL2 Assets"
                                                               Margin="6,0,0,0"
                                                               VerticalAlignment="Center"
                                                               Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                                                </StackPanel>
                                            </Button>
                                            <TextBlock Text="{Binding DescriptionDisplay}"
                                                       Margin="0,4,0,6"
                                                       TextWrapping="Wrap"
                                                       TextTrimming="CharacterEllipsis"
                                                       FontSize="20"
                                                       Foreground="{DynamicResource IMM.ForegroundBrush}"
                                                       MaxHeight="60" />
                                            <TextBlock Text="{Binding DatabaseTagsDisplay}"
                                                       FontSize="12"
                                                       Foreground="#99333333"
                                                       TextTrimming="CharacterEllipsis"
                                                       TextWrapping="NoWrap">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding DatabaseTagsDisplay}" Value="—">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                        <StackPanel Grid.Column="1"
                                                    Grid.Row="0"
                                                    Orientation="Vertical"
                                                    HorizontalAlignment="Right"
                                                    Margin="12,0,0,0">
                                            <StackPanel Orientation="Horizontal"
                                                        Margin="0,0,0,6"
                                                        VerticalAlignment="Top">
                                                <TextBlock Text="&#xE118;"
                                                           FontFamily="Segoe MDL2 Assets"
                                                           FontSize="14"
                                                           Margin="0,0,4,0"
                                                           Foreground="{DynamicResource IMM.ForegroundBrush}" />
                                                <TextBlock FontSize="20"
                                                           FontWeight="SemiBold"
                                                           Foreground="{DynamicResource IMM.ForegroundBrush}">
                                                    <TextBlock.Text>
                                                        <MultiBinding Converter="{StaticResource IMM.DownloadMetricDisplayConverter}">
                                                            <Binding Path="DataContext.IsShowingRecentDownloadMetric" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" />
                                                            <Binding Path="DownloadsDisplay" />
                                                            <Binding Path="RecentDownloadsDisplay" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="&#xE15F;"
                                                           FontFamily="Segoe MDL2 Assets"
                                                           FontSize="14"
                                                           Margin="0,0,4,0"
                                                           Foreground="{DynamicResource IMM.ForegroundBrush}" />
                                                <TextBlock Text="{Binding CommentsDisplay}"
                                                           FontSize="20"
                                                           FontWeight="SemiBold"
                                                           Foreground="{DynamicResource IMM.ForegroundBrush}" />
                                            </StackPanel>
                                        </StackPanel>
                                        <Button Grid.Column="1"
                                                Grid.Row="1"
                                                Padding="12,6"
                                                Width="90"
                                                Height="30"
                                                HorizontalAlignment="Right"
                                                Margin="0,12,0,0"
                                                Background="{DynamicResource IMM.ButtonBackgroundBrush}"
                                                BorderBrush="{DynamicResource IMM.BorderBrush}"
                                                Click="InstallModButton_OnClick"
                                                ToolTip="{Binding InstallButtonToolTip}">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                    <Setter Property="IsEnabled" Value="{Binding HasDownloadableRelease}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsInstalled}" Value="True">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <TextBlock Text="Install"
                                                       VerticalAlignment="Center" />
                                        </Button>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
        <Grid x:Name="BOTTOM" Margin="16,4,16,4" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ui:ProgressRing
                              Height="32"
                              HorizontalAlignment="Left"
                              IsActive="{Binding IsBusy}"
                              Visibility="{Binding IsBusy, Converter={StaticResource IMM.VisibleWhenTrueConverter}}"
                              Foreground="{StaticResource IMM.AccentBrush}" Width="32" VerticalAlignment="Bottom" />


            <TextBlock Grid.Column="0"
                           Text="{Binding StatusMessage}"
                           TextWrapping="Wrap"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Margin="37,0,0,0" FontSize="14" Foreground="Black" FontWeight="Bold">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Foreground" Value="{ui:ThemeResource SystemControlForegroundBaseMediumBrush}" />
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasStatusMessage}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsErrorStatus}" Value="True">
                                <Setter Property="Foreground" Value="#FFD13438" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center">
                <Button Content="Update All"
                            Margin="0,0,8,0"
                            Width="146"
                            Background="{DynamicResource IMM.ButtonBackgroundBrush}"
                            BorderBrush="{DynamicResource IMM.BorderBrush}"
                            Click="UpdateAllModsMenuItem_OnClick"
                            Height="32" />
                <Button Content="Open Logs Folder"
                            Margin="0,0,8,0"
                            Width="146"
                            Background="{DynamicResource IMM.ButtonBackgroundBrush}"
                            BorderBrush="{DynamicResource IMM.BorderBrush}"
                            Click="OpenLogsFolderButton_OnClick"
                            Height="32" />
                <Button Content="Open Config Folder"
                            Margin="0,0,8,0"
                            Width="146"
                            Background="{DynamicResource IMM.ButtonBackgroundBrush}"
                            BorderBrush="{DynamicResource IMM.BorderBrush}"
                            Click="OpenConfigFolderButton_OnClick"
                            Height="32" />
                <Button Content="Open Mods Folder"
                            Margin="0,0,8,0"
                            Width="159"
                            Background="{DynamicResource IMM.ButtonBackgroundBrush}"
                            BorderBrush="{DynamicResource IMM.BorderBrush}"
                            Click="OpenModFolderButton_OnClick"
                            Height="32" />
                <Button Content="Launch Vintage Story"
                            Width="159"
                            Background="{DynamicResource IMM.ButtonBackgroundBrush}"
                            BorderBrush="{DynamicResource IMM.BorderBrush}"
                            Click="LaunchGameButton_OnClick"
                            Height="32"
                            FontWeight="Bold" />
            </StackPanel>
        </Grid>
        <Border Background="{DynamicResource CardGradient3}" x:Name="MODINFO_border"
                BorderBrush="{DynamicResource VS.DialogBorderBrush}"
                BorderThickness="0"
                CornerRadius="15,15,15,15" Margin="0,255,40,185" Grid.Row="1" Height="201" HorizontalAlignment="Right" Width="326" Panel.ZIndex="400">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Setter Property="IsHitTestVisible" Value="False" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasSelectedMods}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                            <Setter Property="IsHitTestVisible" Value="True" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SearchModDatabase}" Value="True" />
                                <Condition Binding="{Binding UseModDbDesignView}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Setter Property="IsHitTestVisible" Value="False" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border.Effect>
                <DropShadowEffect Color="#33000000" BlurRadius="20" Direction="270" ShadowDepth="8" Opacity="0.2"/>
            </Border.Effect>
            <Grid x:Name="MODINFO_grid" Height="223" Width="324" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="53*" />
                    <ColumnDefinition Width="28*" />
                </Grid.ColumnDefinitions>
                <Grid.Effect>
                    <DropShadowEffect BlurRadius="6" Direction="270" ShadowDepth="4" Opacity="0.1" Color="#33000000" />
                </Grid.Effect>
                <Button x:Name="SelectedModDatabasePageButton"
                Padding="12,6"
                Background="{DynamicResource IMM.ButtonBackgroundBrush}"
                BorderBrush="{DynamicResource IMM.BorderBrush}"
                Visibility="Visible"
                IsEnabled="False"
                Click="ModDatabasePageButton_OnClick"
                ToolTip="{Binding ModDatabasePageUrlDisplay}"
                VerticalContentAlignment="Center"
                Content="Mod Page" Height="30" Width="92" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Column="1" Margin="0,45,0,0" />
                <Button x:Name="SelectedModEditConfigButton"
                Padding="12,6"
                Background="{DynamicResource IMM.ButtonBackgroundBrush}"
                BorderBrush="{DynamicResource IMM.BorderBrush}"
                Visibility="Visible"
                IsEnabled="False"
                Click="EditConfigButton_OnClick"
                ToolTip="{Binding DisplayName, StringFormat=Edit Config for \{0\}}"
                VerticalContentAlignment="Stretch"
                Content="Edit Config" Height="30" Width="92" HorizontalContentAlignment="Stretch" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0" Grid.Column="1" />
                <Button x:Name="SelectedModDeleteButton"
                Padding="12,6"
                Background="{DynamicResource IMM.ButtonBackgroundBrush}"
                BorderBrush="{DynamicResource IMM.BorderBrush}"
                Visibility="Visible"
                IsEnabled="False"
                Click="DeleteModButton_OnClick" Height="30" Width="92" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,80,0,0" Grid.Column="1">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <Binding Path="DisplayName" StringFormat="Delete {0}" />
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.HasMultipleSelectedMods, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                    <Setter Property="ToolTip" Value="Delete selected mods" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">

                        <TextBlock Text="Delete" VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
                <Button x:Name="SelectedModFixButton"
                        Padding="12,6"
                        Background="{DynamicResource IMM.ButtonBackgroundBrush}"
                        BorderBrush="{DynamicResource IMM.BorderBrush}"
                        Visibility="Collapsed"
                        IsEnabled="False"
                        Click="FixModButton_OnClick"
                        ToolTip="Resolve dependency issues" Height="30" Width="92" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,115,0,0" Grid.Column="1">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">

                        <TextBlock Text="Fix" VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
                <Button x:Name="SelectedModInstallButton"
                Padding="12,6"
                Background="{DynamicResource IMM.ButtonBackgroundBrush}"
                BorderBrush="{DynamicResource IMM.BorderBrush}"
                Visibility="Visible"
                IsEnabled="False"
                Click="InstallModButton_OnClick"
                ToolTip="{Binding InstallButtonToolTip}" Height="30" Width="90" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0" Grid.Column="1">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Text="Install" VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
                <ComboBox x:Name="SelectedModVersionComboBox"
                Width="166"
                Height="30"
                Padding="12,6"
                Background="{DynamicResource IMM.ButtonBackgroundBrush}"
                BorderBrush="{DynamicResource IMM.BorderBrush}"
                BorderThickness="1"
                ui:ControlHelper.CornerRadius="6"
                ItemsSource="{Binding SelectedMod.VersionOptions}"
                SelectedItem="{Binding SelectedMod.SelectedVersionOption, Mode=TwoWay}"
                SelectionChanged="SelectedModVersionComboBox_OnSelectionChanged"
                VerticalAlignment="Top" HorizontalAlignment="Left" Margin="17,155,0,0">
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Setter Property="IsEnabled" Value="False" />
                            <Setter Property="Background" Value="{DynamicResource IMM.ButtonBackgroundBrush}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedMod.HasVersionOptions}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="IsEnabled" Value="True" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.SearchModDatabase, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding HasMultipleSelectedMods}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type viewModels:ModVersionOptionViewModel}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding VersionDisplay}" />
                                <TextBlock Text=" (Installed)"
                                Margin="6,0,0,0">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsInstalled}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text="✓"
                                Foreground="#FF2E7D32"
                                Margin="6,0,0,0">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsCompatible}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Button x:Name="SelectedModUpdateButton"
                Padding="12,6"
                Background="{DynamicResource IMM.ButtonBackgroundBrush}"
                BorderBrush="{DynamicResource IMM.BorderBrush}"
                Visibility="Visible"
                IsEnabled="False"
                Click="UpdateModButton_OnClick"
                ToolTip="{Binding UpdateButtonToolTip}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="116" Margin="198,155,0,0" Height="30" Grid.ColumnSpan="2">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Width="90" ><Run Text="Update to latest"/><LineBreak/><Run/></TextBlock>
                    </StackPanel>
                </Button>
                <TextBlock
                FontWeight="SemiBold"
                Foreground="{StaticResource IMM.ForegroundBrush}"
                TextAlignment="Left" VerticalAlignment="Top" HorizontalAlignment="Left" Width="189" Margin="23,15,0,0" Height="25" FontSize="14">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{Binding SelectedMod.DisplayName}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasMultipleSelectedMods}" Value="True">
                                    <Setter Property="Text" Value="Multiple mods selected" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock
                Text="{Binding SelectedMod.DescriptionDisplay}"
                Foreground="{ui:ThemeResource SystemControlForegroundBaseMediumBrush}"
                MaxWidth="420"
                TextWrapping="Wrap"
                TextTrimming="CharacterEllipsis"
                TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Top" Width="189" Height="105" MaxHeight="143" Margin="23,45,0,0" FontSize="14">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasMultipleSelectedMods}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>

        </Border>

    </Grid>
</Window>
