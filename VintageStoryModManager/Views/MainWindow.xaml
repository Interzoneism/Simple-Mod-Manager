<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:design="clr-namespace:VintageStoryModManager.Design"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:services="clr-namespace:VintageStoryModManager.Services"
        xmlns:viewModels="clr-namespace:VintageStoryModManager.ViewModels"
        xmlns:views="clr-namespace:VintageStoryModManager.Views"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:converters="clr-namespace:VintageStoryModManager.Converters"
        xmlns:Options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" x:Class="VintageStoryModManager.Views.MainWindow"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type={x:Type design:MainWindowDesignData}}"
        Title="Simple VS Manager"
        Height="798" Width="1272"
        MinWidth="1200" MinHeight="775" WindowStartupLocation="CenterScreen"
        PreviewKeyDown="MainWindow_OnPreviewKeyDown" Background="{DynamicResource Brush.Window.Shell.Background.Solid}">

    <Window.Resources>
        <converters:BooleanToVisibilityConverter x:Key="IMM.VisibleWhenTrueConverter" />
        <converters:BooleanToVisibilityConverter x:Key="IMM.VisibleWhenFalseConverter" IsInverted="True" />
        <converters:BooleanToTabIndexConverter x:Key="IMM.BooleanToTabIndexConverter" />
        <converters:RowPaddingOffsetConverter x:Key="IMM.RowPaddingOffsetConverter" />
        <Thickness x:Key="IMM.RowPaddingBase">0,0,0,0</Thickness>
        <sys:Double x:Key="IMM.NormalRowHeightOffset">10</sys:Double>
        <sys:Double x:Key="IMM.CompactRowHeightOffset">-12</sys:Double>
        <sys:Double x:Key="IMM.ModDbCardScale">0.75</sys:Double>
        <converters:DownloadMetricDisplayConverter x:Key="IMM.DownloadMetricDisplayConverter" />
        <sys:Double x:Key="IMM.TagRowMaxHeight">70</sys:Double>
        <sys:Double x:Key="IMM.TagRowCompactMaxHeight">35</sys:Double>
        <Style x:Key="IMM.TagBadgeBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource Brush.Panel.Secondary.Background.Solid}" />
            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Accent.Primary}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="Padding" Value="8,2" />
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>
        <ItemsPanelTemplate x:Key="IMM.TagItemsPanelTemplate">
            <views:OverlappingTagPanel />
        </ItemsPanelTemplate>
        <ItemsPanelTemplate x:Key="IMM.TagFilterItemsPanelTemplate">
            <UniformGrid Columns="4" HorizontalAlignment="Left" />
        </ItemsPanelTemplate>
        <DataTemplate x:Key="IMM.TagBadgeTemplate">
            <Border Style="{StaticResource IMM.TagBadgeBorderStyle}">
                <TextBlock Text="{Binding}" FontSize="12" Foreground="{DynamicResource Brush.Text.Primary}" />
            </Border>
        </DataTemplate>
        <Style x:Key="IMM.TagFilterToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="ContentTemplate" Value="{StaticResource IMM.TagBadgeTemplate}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0,0,6,6" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="IMM.TagHeaderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="IMM.DataGridCellBaseStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0,0,0,0" />
            <Setter Property="Padding" Value="8,6" />
            <Setter Property="Foreground"
                    Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground"
                            Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="IMM.PrimaryDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="{DynamicResource Brush.DataGrid.Header.Background}" />
            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Panel.Secondary.Background.Solid}" />
            <Setter Property="BorderThickness" Value="1,0,0,1" />
            <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
            <Setter Property="Margin" Value="0,0,0,6" />
            <Setter Property="Padding" Value="12,10" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Border x:Name="HeaderBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <Path x:Name="SortArrow"
                  Grid.Column="1"
                  Width="6"
                  Height="6"
                  Margin="6,0,0,0"
                  Fill="{DynamicResource Brush.Accent.Primary}"
                  Stretch="Uniform"
                  Visibility="Collapsed"
                  VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource Brush.DataGrid.Header.Background.Hover}" />
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                <Setter TargetName="SortArrow" Property="Data" Value="M 0 3 L 3 0 6 3 Z" />
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                <Setter TargetName="SortArrow" Property="Data" Value="M 0 0 L 3 3 6 0 Z" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="IMM.ModDatabaseAutoLoadToggleStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Padding" Value="8,0,8,0" />
            <Setter Property="FontSize" Value="15" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding SearchModDatabase}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="IMM.ModTabButtonBaseStyle"
               TargetType="{x:Type Button}"
               BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="{DynamicResource Brush.ModTabs.Background}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Opacity" Value="0.5" />
            <Setter Property="Padding" Value="12,6" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="ButtonBackground"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBackground" Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="IMM.InstalledTabButtonStyle"
               TargetType="{x:Type Button}"
               BasedOn="{StaticResource IMM.ModTabButtonBaseStyle}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding SearchModDatabase}" Value="False" />
                        <Condition Binding="{Binding IsViewingCloudModlists}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Opacity" Value="1" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="IMM.ModDatabaseTabButtonStyle"
               TargetType="{x:Type Button}"
               BasedOn="{StaticResource IMM.ModTabButtonBaseStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding SearchModDatabase}" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="IMM.ModlistsTabButtonStyle"
               TargetType="{x:Type Button}"
               BasedOn="{StaticResource IMM.ModTabButtonBaseStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsViewingCloudModlists}" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!-- Menu item style shared by toggle and standard items -->
        <Style x:Key="ToggleMenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="{DynamicResource Brush.Panel.Primary.Background.Solid}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="12,0,12,0" />
            <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid SnapsToDevicePixels="True">
                            <Border x:Name="templateRoot"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="True">
                                <Grid Grid.IsSharedSizeScope="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemCheckColumnGroup" />
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock x:Name="CheckMark"
                                               Margin="0,0,8,0"
                                               VerticalAlignment="Center"
                                               FontFamily="{TemplateBinding FontFamily}"
                                               FontSize="{TemplateBinding FontSize}"
                                               Foreground="{TemplateBinding Foreground}"
                                               Text="☐"
                                               Visibility="Collapsed" />

                                    <ContentPresenter x:Name="Icon"
                                                      Grid.Column="1"
                                                      Margin="0,0,8,0"
                                                      VerticalAlignment="Center"
                                                      ContentSource="Icon"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    <ContentPresenter x:Name="HeaderHost"
                                                      Grid.Column="2"
                                                      VerticalAlignment="Center"
                                                      RecognizesAccessKey="True"
                                                      ContentSource="Header"
                                                      TextElement.Foreground="{TemplateBinding Foreground}" />

                                    <TextBlock x:Name="InputGestureText"
                                               Grid.Column="3"
                                               Margin="24,0,0,0"
                                               VerticalAlignment="Center"
                                               Foreground="{TemplateBinding Foreground}"
                                               Text="{TemplateBinding InputGestureText}"
                                               Visibility="Visible" />

                                    <TextBlock x:Name="ArrowGlyph"
                                               Grid.Column="4"
                                               Margin="24,0,0,0"
                                               VerticalAlignment="Center"
                                               Foreground="{TemplateBinding Foreground}"
                                               Text="▶"
                                               Visibility="Collapsed" />
                                </Grid>
                            </Border>

                            <Popup x:Name="SubMenuPopup"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   Placement="Right"
                                   PlacementTarget="{Binding ElementName=templateRoot}"
                                   HorizontalOffset="-2"
                                   VerticalOffset="-3"
                                   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border Margin="0,0,0,4"
                                        Background="{DynamicResource Brush.Panel.Primary.Background.Solid}"
                                        BorderBrush="{DynamicResource Brush.Accent.Primary}"
                                        BorderThickness="1"
                                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                        SnapsToDevicePixels="True">
                                    <ScrollViewer CanContentScroll="False"
                                                  Focusable="False"
                                                  HorizontalScrollBarVisibility="Hidden"
                                                  VerticalScrollBarVisibility="Auto">
                                        <ItemsPresenter Margin="2" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Icon" Property="Content" Value="{x:Null}">
                                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            </Trigger>

                            <Trigger Property="InputGestureText" Value="">
                                <Setter TargetName="InputGestureText" Property="Visibility" Value="Collapsed" />
                            </Trigger>

                            <Trigger Property="InputGestureText" Value="{x:Null}">
                                <Setter TargetName="InputGestureText" Property="Visibility" Value="Collapsed" />
                            </Trigger>

                            <Trigger Property="HasItems" Value="True">
                                <Setter TargetName="ArrowGlyph" Property="Visibility" Value="Visible" />
                            </Trigger>

                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                                <Setter TargetName="SubMenuPopup" Property="HorizontalOffset" Value="0" />
                                <Setter TargetName="SubMenuPopup" Property="VerticalOffset" Value="0" />
                                <Setter TargetName="ArrowGlyph" Property="Visibility" Value="Collapsed" />
                            </Trigger>

                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter TargetName="ArrowGlyph" Property="Text" Value="▶" />
                            </Trigger>

                            <Trigger Property="IsCheckable" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                            </Trigger>

                            <Trigger Property="IsCheckable" Value="False">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="CheckMark" Property="Text" Value="🗹" />
                            </Trigger>

                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="CheckMark" Property="Text" Value="☐" />
                            </Trigger>

                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource Brush.Menu.Item.Background.Hover}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource Brush.Border.Hover}" />
                                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Placeholder}" />
                            </Trigger>

                            <Trigger Property="IsSubmenuOpen" Value="True">
                                <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource Brush.Menu.Item.Background.Hover}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource Brush.Border.Hover}" />
                                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Margin="0,0,0,8" Background="{DynamicResource Brush.Panel.Primary.Background.Solid}">

        <Grid.RowDefinitions>
            <RowDefinition Height="35" MinHeight="10" />
            <RowDefinition />
            <RowDefinition Height="Auto" MinHeight="40" />
        </Grid.RowDefinitions>
        <Grid x:Name="TOP" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>


            <Menu Grid.Column="0"
                  IsMainMenu="True"
                  BorderThickness="0"
                  Margin="0,0,0,5"
                  Background="{DynamicResource Brush.Window.Shell.Background.Solid}"
                  Foreground="{DynamicResource Brush.Text.Primary}">
                <Menu.Resources>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource ToggleMenuItemStyle}" />
                </Menu.Resources>

                <MenuItem Header="_File" Height="35" >
                    <MenuItem Header="Set _Data Folder..." Height="35" Click="SelectDataFolderMenuItem_OnClick" />
                    <MenuItem Header="Set _Game Folder..." Height="35" Click="SelectGameFolderMenuItem_OnClick" />
                    <MenuItem Header="Set Custom Vintage Story Shortcut" Height="35" Click="SetCustomShortcutMenuItem_OnClick" />
                    <MenuItem Header="Restore backup point"
                              Height="35"
                              SubmenuOpened="RestoreBackupMenuItem_OnSubmenuOpened">
                        <MenuItem Header="Loading..." IsEnabled="False" />
                    </MenuItem>
                    <MenuItem x:Name="DisableInternetAccessMenuItem"
                              Header="_Disable Internet Access"
                              Height="35"
                              IsCheckable="True"
                              Style="{StaticResource ToggleMenuItemStyle}"
                              Click="DisableInternetAccessMenuItem_OnClick" />
                    <Separator  />
                    <MenuItem Header="E_xit" Height="35" Click="ExitMenuItem_OnClick" />
                </MenuItem>
                <MenuItem Header="_Mods" Height="35" SubmenuOpened="ModsMenuItem_OnSubmenuOpened">
                    <MenuItem Header="_Refresh Mods"
                              Height="35"
                              Command="{Binding RefreshModsUiCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                    <MenuItem Header="_Update All Mods" Height="35" Click="UpdateAllModsMenuItem_OnClick" />
                    <MenuItem Header="Check mods compatibility" Height="35" Click="CheckModsCompatibilityMenuItem_OnClick" />
                    <MenuItem x:Name="CacheAllVersionsMenuItem"
                              Header="Cache all versions locally"
                              Height="35"
                              IsCheckable="True"
                              Style="{StaticResource ToggleMenuItemStyle}"
                              Click="CacheAllVersionsMenuItem_OnClick" />
                    <MenuItem x:Name="DeleteCachedModsMenuItem"
                              Header="_Delete Cached Mods"
                              Height="35"
                              Click="DeleteCachedModsMenuItem_OnClick" />
                </MenuItem>
                <MenuItem Header="_Presets and Modlists" Height="35">
                    <MenuItem Header="_Save Preset..." Height="35" Click="SavePresetMenuItem_OnClick" />
                    <MenuItem x:Name="LoadPresetMenuItem"
                              Header="_Load Preset"
                              Height="35"
                              SubmenuOpened="LoadPresetMenuItem_OnSubmenuOpened">
                        <MenuItem x:Name="BrowsePresetMenuItem"
                                  Header="_Browse..."
                                  Height="35"
                                  Click="LoadPresetMenuItem_OnClick" />
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Save Local _Modlist..." Height="35" Click="SaveModlistMenuItem_OnClick" />
                    <MenuItem Header="Load Local _Modlist..." Height="35" Click="LoadModlistMenuItem_OnClick" />
                    <Separator />
                    <MenuItem x:Name="AlwaysClearModlistsMenuItem"
                              Header="Always clear mods before loading Modlist"
                              Height="35"
                              IsCheckable="True"
                              Style="{StaticResource ToggleMenuItemStyle}"
                              Click="AlwaysClearModlistsMenuItem_OnClick" />
                    <MenuItem x:Name="AlwaysAddModlistsMenuItem"
                              Header="Always add to current mods when loading Modlist"
                              Height="35"
                              IsCheckable="True"
                              Style="{StaticResource ToggleMenuItemStyle}"
                              Click="AlwaysAddModlistsMenuItem_OnClick" />
                </MenuItem>
                <MenuItem Header="_View" Height="35">
                    <MenuItem Header="_Compact View"
                              Height="35"
                              IsCheckable="True"
                              Style="{StaticResource ToggleMenuItemStyle}"
                              IsChecked="{Binding IsCompactView, Mode=TwoWay}" />
                    <MenuItem Header="_ModDB Design"
                              Height="35"
                              IsCheckable="True"
                              Style="{StaticResource ToggleMenuItemStyle}"
                              IsChecked="{Binding UseModDbDesignView, Mode=TwoWay}" />
                    <MenuItem Header="_Themes" Height="35">
                        <MenuItem x:Name="VintageStoryThemeMenuItem"
                                  Header="_Vintage Story"
                                  Height="35"
                                  IsCheckable="True"
                                  Style="{StaticResource ToggleMenuItemStyle}"
                                  Tag="{x:Static services:ColorTheme.VintageStory}"
                                  Click="ThemeMenuItem_OnClick" />
                        <MenuItem x:Name="DarkThemeMenuItem"
                                  Header="_Dark"
                                  Height="35"
                                  IsCheckable="True"
                                  Style="{StaticResource ToggleMenuItemStyle}"
                                  Tag="{x:Static services:ColorTheme.Dark}"
                                  Click="ThemeMenuItem_OnClick" />
                        <MenuItem x:Name="LightThemeMenuItem"
                                  Header="_Light"
                                  Height="35"
                                  IsCheckable="True"
                                  Style="{StaticResource ToggleMenuItemStyle}"
                                  Tag="{x:Static services:ColorTheme.Light}"
                                  Click="ThemeMenuItem_OnClick" />
                        <MenuItem x:Name="CustomThemeMenuItem"
                                  Header="_Custom..."
                                  Height="35"
                                  IsCheckable="True"
                                  Style="{StaticResource ToggleMenuItemStyle}"
                                  Tag="{x:Static services:ColorTheme.Custom}"
                                  Click="ThemeMenuItem_OnClick" />
                        <MenuItem x:Name="SurpriseMeThemeMenuItem"
                                  Header="_Surprise me! (In A Bad Way)"
                                  Height="35"
                                  IsCheckable="True"
                                  Style="{StaticResource ToggleMenuItemStyle}"
                                  Tag="{x:Static services:ColorTheme.SurpriseMe}"
                                  Click="ThemeMenuItem_OnClick" />
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Help / Advanced" Height="35">
                    <MenuItem x:Name="ManagerVersionMenuItem"
                              Header="Version: --"
                              Padding="12,6"
                              IsEnabled="False"
                              Focusable="False" />
                    <MenuItem x:Name="GameVersionMenuItem"
                              Header="Vintage Story: --"
                              Padding="12,6"
                              IsEnabled="False"
                              Focusable="False"
                              Visibility="Collapsed" />
                    <MenuItem Header="Open manager config folder"
                              Padding="12,6"
                              Click="ManagerDataFolderMenuItem_OnClick" />
                    <MenuItem Header="Open _Mod DB page for the manager"
                              Padding="12,6"
                              Click="ManagerModDbPageMenuItem_OnClick" />
                    <MenuItem Header="_Additonal Info"
                              Padding="12,6"
                              Click="GuideMenuItem_OnClick" />
                    <MenuItem Header="_Advanced" Height="35">
                        <MenuItem x:Name="EnableDebugLoggingMenuItem"
                                  Header="Enable debug logging"
                                  Height="35"
                                  IsCheckable="True"
                                  Style="{StaticResource ToggleMenuItemStyle}"
                                  Click="EnableDebugLoggingMenuItem_OnClick" />
                        <MenuItem Header="Delete all Simple VS Manager files (Uninstall)"
                                  Padding="12,6"
                                  Click="DeleteAllManagerFilesMenuItem_OnClick" />
                    </MenuItem>
                </MenuItem>
            </Menu>

            <TextBlock x:Name="ManagerUpdateLinkTextBlock"
                       Grid.Column="1"
                       Visibility="Collapsed"
                       Margin="4,0,4,0"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left">
                <Hyperlink NavigateUri="https://mods.vintagestory.at/simplevsmanager"
                           Foreground="{DynamicResource Brush.Text.Emphasis}"
                           RequestNavigate="ManagerUpdateLink_OnRequestNavigate">
                    Update available!
                </Hyperlink>
            </TextBlock>


        </Grid>
        <Grid x:Name="MIDDLE" Grid.Row="1"
              Margin="16,10,16,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="0,-31,0,0" Height="160" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="428" />
                    <ColumnDefinition Width="392"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0"
                            Orientation="Horizontal"
                            VerticalAlignment="Top" Height="40" Margin="0,30,0,0" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="444">
                    <Button Content="Installed Mods"
                            Command="{Binding ShowInstalledModsCommand}"
                            Width="138"
                            Height="40"
                            FontSize="16"
                            Style="{StaticResource IMM.InstalledTabButtonStyle}" />
                    <Button Content="Mod DB"
                            Command="{Binding ShowModDatabaseCommand}"
                            Width="138"
                            Height="40"
                            FontSize="16"
                            Style="{StaticResource IMM.ModDatabaseTabButtonStyle}" Margin="5,0,0,0" />
                    <Button Content="Modlists"
                            Command="{Binding ShowCloudModlistsCommand}"
                            Width="138"
                            Height="40"
                            FontSize="16"
                            Style="{StaticResource IMM.ModlistsTabButtonStyle}" Margin="5,0,0,0" />
                </StackPanel>

                <StackPanel Grid.Column="1"
                            Orientation="Horizontal" Margin="16,44,231,97" Grid.ColumnSpan="2">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SearchModDatabase}" Value="True" />
                                        <Condition Binding="{Binding SearchText}" Value="" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SearchModDatabase}" Value="True" />
                                        <Condition Binding="{Binding SearchText}" Value="{x:Null}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <RadioButton Content="All time"
                                 GroupName="ModDatabaseAutoLoadMode"
                                 IsChecked="{Binding IsTotalDownloadsMode, Mode=TwoWay}" Width="65" MinWidth="65" ClickMode="Press"
                                 />
                    <RadioButton Content="Last 30 days"
                                 GroupName="ModDatabaseAutoLoadMode"
                                 IsChecked="{Binding IsDownloadsLastThirtyDaysMode, Mode=TwoWay}" Margin="0,0,0,0" Width="90" MinWidth="90" ClickMode="Press" />
                    <RadioButton Content="{Binding DownloadsNewModsRecentMonthsLabel}"
                                 GroupName="ModDatabaseAutoLoadMode"
                                 IsChecked="{Binding IsDownloadsNewModsRecentMonthsMode, Mode=TwoWay}" Margin="0,0,0,0" Width="309" ClickMode="Press" />
                </StackPanel>
                <StackPanel Grid.Column="1" 
                    Orientation="Horizontal"
                    VerticalAlignment="Top" Height="24" Margin="16,20,230,0">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SearchModDatabase}" Value="True" />
                                        <Condition Binding="{Binding SearchText}" Value="" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SearchModDatabase}" Value="True" />
                                        <Condition Binding="{Binding SearchText}" Value="{x:Null}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <Label Content="Sort by most downloads..."
                           Width="146"
                           Foreground="{DynamicResource Brush.Text.Primary}" Height="26" />
                </StackPanel>
                <Grid Grid.Column="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top" Height="64" Width="251">
                    <ToggleButton x:Name="SearchOptionsToggleButton"
                        Content="Search options"
                        VerticalAlignment="Top"
                        Margin="148,-1,1,0" RenderTransformOrigin="0.5,0.5" Height="27" Width="102">
                        <ToggleButton.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform AngleY="0.25"/>
                                <RotateTransform/>
                                <TranslateTransform Y="-0.496"/>
                            </TransformGroup>
                        </ToggleButton.RenderTransform>
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource IMM.ToggleButtonBaseStyle}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SearchModDatabase}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SearchModDatabase}" Value="False">
                                        <Setter Property="IsChecked" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Popup PlacementTarget="{Binding ElementName=SearchOptionsToggleButton}"
                        Placement="Bottom"
                        IsOpen="{Binding IsChecked, ElementName=SearchOptionsToggleButton, Mode=TwoWay}"
                        StaysOpen="False"
                        AllowsTransparency="True"
                        Focusable="False" Margin="0,36,0,33">
                        <Border Background="{DynamicResource Brush.Panel.Primary.Background.Solid}"
                            BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                            BorderThickness="1"
                            CornerRadius="6"
                            Padding="12"
                            MinWidth="252">
                            <StackPanel>
                                <CheckBox Content="Include installed mods"
                                    Margin="0,0,0,8"
                                    IsChecked="{Binding IncludeInstalledModDatabaseResults, Mode=TwoWay}" />
                                <CheckBox Content="Only show compatible mods"
                                    IsChecked="{Binding OnlyShowCompatibleModDatabaseResults, Mode=TwoWay}" />
                            </StackPanel>
                        </Border>
                    </Popup>
                    <Grid VerticalAlignment="Center" Height="64" Margin="-253,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" MinWidth="229" />
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Column="1" MinWidth="200"
                            Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                            FontSize="14" VerticalContentAlignment="Center" Margin="5,28,0,4">

                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource IMM.SearchTextBoxStyle}">
                                    <Setter Property="ui:ControlHelper.PlaceholderText" Value="Search installed mods" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SearchModDatabase}" Value="True">
                                            <Setter Property="ui:ControlHelper.PlaceholderText" Value="Search Mod Database" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsViewingCloudModlists}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                            <Setter Property="ui:ControlHelper.PlaceholderText" Value="Cloud modlist search coming soon" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>

                        <StackPanel Orientation="Horizontal" Margin="0,28,5,0" VerticalAlignment="Top" Height="32" HorizontalAlignment="Right">
                            <Button Content="Refresh"
                                Width="65"
                                Height="32"
                                Margin="0,0,10,0"
                                ToolTip="Quickly refreshes the current view using cached data if no changes are detected on the online mod page."
                                Background="{DynamicResource Brush.Button.Primary.Background.Normal}"
                                BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                                Command="{Binding RefreshModsUiCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="Padding" Value="6,6,6,6" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsViewingInstalledMods}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Content="Rebuild"
                                Width="65"
                                Height="32"
                                ToolTip="Deletes all mod info cache and fetches fresh data online. Slower but ensures everything is reindexed."
                                Background="{DynamicResource Brush.Button.Primary.Background.Normal}"
                                BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                                Click="RebuildButton_OnClick">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="Padding" Value="6,6,6,6" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsViewingInstalledMods}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
            <Grid Margin="0,32,25,0" Grid.RowSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border Grid.Row="1"
                        Margin="0,0,-29,0"
                        Background="Transparent"
                        BorderBrush="{DynamicResource Brush.SunkenSurface.Bevel.Light}"
                        BorderThickness="0,0,2,2"
                        CornerRadius="{Binding Path=(ui:ControlHelper.CornerRadius), ElementName=ModsDataGrid}"
                        SnapsToDevicePixels="True"
                        Visibility="{Binding IsViewingCloudModlists, Converter={StaticResource IMM.VisibleWhenFalseConverter}}">
                    <Border Background="{DynamicResource Brush.SunkenSurface.Background}"
                            BorderBrush="{DynamicResource Brush.SunkenSurface.Bevel.Dark}"
                            BorderThickness="2,2,0,0"
                            CornerRadius="{Binding Path=(ui:ControlHelper.CornerRadius), ElementName=ModsDataGrid}"
                            SnapsToDevicePixels="True">
                        <DataGrid x:Name="ModsDataGrid"
                                  ItemsSource="{Binding CurrentModsView}"
                                  AutoGenerateColumns="False"
                                  CanUserAddRows="False"
                                  CanUserDeleteRows="False"
                                  IsReadOnly="False"
                                  EnableRowVirtualization="True"
                                  VirtualizingPanel.IsVirtualizing="True"
                                  VirtualizingPanel.VirtualizationMode="Recycling"
                                  ScrollViewer.CanContentScroll="True"
                                  GridLinesVisibility="None"
                                  SelectionUnit="FullRow"
                                  SelectionMode="Single"
                                  
                                  RowHeaderWidth="0"
                                  BorderThickness="0,1,2,1"
                                  IsSynchronizedWithCurrentItem="True"
                                  MinColumnWidth="20"
                                  SelectionChanged="ModsDataGrid_OnSelectionChanged"
                                  Foreground="{DynamicResource Brush.Text.Primary}"
                                  PreviewKeyDown="ModsDataGrid_OnPreviewKeyDown"
                                  PreviewMouseLeftButtonDown="ModsDataGrid_OnPreviewMouseLeftButtonDown"
                                  PreviewMouseWheel="ModsDataGrid_OnPreviewMouseWheel"
                                  Sorting="ModsDataGrid_OnSorting"
                                  RowBackground="{DynamicResource Brush.Button.Primary.Background.Normal}"
                                  HorizontalGridLinesBrush="Transparent"
                                  VerticalGridLinesBrush="Transparent"
                                  HeadersVisibility="Column"
                                  ui:ControlHelper.CornerRadius="0"
                                  FontSize="15"
                                  Background="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                                  BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}">
                            <DataGrid.Resources>
                                <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource IMM.DataGridScrollBarStyle}" />
                                <Style TargetType="{x:Type Thumb}" BasedOn="{StaticResource IMM.DataGridScrollBarThumbStyle}" />
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                </Style>
                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource IMM.PrimaryDataGridColumnHeaderStyle}" />
                            </DataGrid.Resources>
                            <DataGrid.CellStyle>
                                <StaticResource ResourceKey="IMM.DataGridCellBaseStyle"/>
                            </DataGrid.CellStyle>
                            <DataGrid.Style>
                                <Style TargetType="{x:Type DataGrid}">
                                    <Setter Property="CanUserSortColumns" Value="True" />
                                    <Setter Property="Visibility" Value="Visible" />

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SearchModDatabase}" Value="True">
                                            <Setter Property="CanUserSortColumns" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsViewingCloudModlists}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SearchModDatabase}" Value="True" />
                                                <Condition Binding="{Binding UseModDbDesignView}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>

                            <DataGrid.RowHeaderStyle>

                                <Style/>
                            </DataGrid.RowHeaderStyle>
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource Brush.InstalledMod.Row.Border}" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Margin" Value="2,2,2,2" />
                                    <Setter Property="Padding">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource IMM.RowPaddingOffsetConverter}">
                                                <Binding Source="{StaticResource IMM.RowPaddingBase}" />
                                                <Binding Source="{StaticResource IMM.NormalRowHeightOffset}" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Height" Value="{x:Static sys:Double.NaN}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridRow}">
                                                <!-- The brushes here come from InstalledMods_Row_* resources in Resources/Themes. -->
                                                <Border x:Name="RowBorder"
                                            Background="{DynamicResource Brush.InstalledMod.Row.Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="8"
                                        Margin="4,0,4,4"
                                        SnapsToDevicePixels="True">
                                                    <Border.Effect>
                                                        <DropShadowEffect Color="{Binding Source={StaticResource Brush.DataGrid.RowShadow}, Path=Color}" BlurRadius="2" Direction="210" ShadowDepth="2" Opacity="0.5"/>

                                                    </Border.Effect>
                                                    <Grid>
                                                        <Border x:Name="SelectionOverlay"
                                                Background="{DynamicResource Brush.Accent.Primary}"
                                                Opacity="0"
                                                CornerRadius="8"
                                                IsHitTestVisible="False" />
                                                        <Border x:Name="HoverOverlay"
                                                Background="{DynamicResource Brush.Button.Primary.Background.Hover}"
                                                Opacity="0"
                                                CornerRadius="8"
                                                IsHitTestVisible="False" />
                                                        <Border Padding="{TemplateBinding Padding}"
                                                Background="Transparent"
                                                CornerRadius="8">
                                                            <SelectiveScrollingGrid>
                                                                <SelectiveScrollingGrid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                </SelectiveScrollingGrid.ColumnDefinitions>
                                                                <SelectiveScrollingGrid.RowDefinitions>
                                                                    <RowDefinition Height="*" />
                                                                    <RowDefinition Height="Auto" />
                                                                </SelectiveScrollingGrid.RowDefinitions>
                                                                <DataGridCellsPresenter Grid.Column="0"
                                                                         SelectiveScrollingGrid.SelectiveScrollingOrientation="Both" />
                                                                <DataGridDetailsPresenter Grid.Column="0"
                                                                          Grid.Row="1"
                                                                          SelectiveScrollingGrid.SelectiveScrollingOrientation="Horizontal"
                                                                          Visibility="{TemplateBinding DetailsVisibility}" />
                                                            </SelectiveScrollingGrid>
                                                        </Border>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding HasErrors}" Value="True">
                                                        <Setter TargetName="RowBorder" Property="Background" Value="{DynamicResource Brush.Overlay.Warning.Background}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding HasActivationError}" Value="True">
                                                        <Setter TargetName="RowBorder" Property="Background" Value="{DynamicResource Brush.Overlay.Warning.Background}" />
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsActive}" Value="False" />
                                                            <Condition Binding="{Binding DataContext.SearchModDatabase, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="RowBorder" Property="Background" Value="{DynamicResource Brush.ModCard.Background.Disabled}" />
                                                        <Setter TargetName="RowBorder" Property="Opacity" Value="0.5" />
                                                    </MultiDataTrigger>
                                                    <Trigger Property="DetailsVisibility" Value="Visible">
                                                        <Setter TargetName="RowBorder" Property="BorderThickness" Value="2,2,2,2" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True" />
                                                            <Condition Property="IsSelected" Value="False" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="RowBorder" Property="BorderBrush" Value="{DynamicResource Brush.Button.Primary.Background.Hover}" />
                                                    </MultiTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <EventSetter Event="UIElement.PreviewMouseLeftButtonDown" Handler="ModsDataGridRow_OnPreviewMouseLeftButtonDown" />
                                    <EventSetter Event="FrameworkElement.Loaded" Handler="ModsDataGridRow_OnLoaded" />
                                    <EventSetter Event="FrameworkElement.Unloaded" Handler="ModsDataGridRow_OnUnloaded" />
                                    <EventSetter Event="UIElement.MouseEnter" Handler="ModsDataGridRow_OnMouseEnter" />
                                    <EventSetter Event="UIElement.MouseLeave" Handler="ModsDataGridRow_OnMouseLeave" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DataContext.IsCompactView, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                            <Setter Property="Padding">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{StaticResource IMM.RowPaddingOffsetConverter}">
                                                        <Binding Source="{StaticResource IMM.RowPaddingBase}" />
                                                        <Binding Source="{StaticResource IMM.CompactRowHeightOffset}" />
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding HasErrors}" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource Brush.Overlay.Warning.Background}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding HasActivationError}" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource Brush.Overlay.Warning.Background}" />
                                        </DataTrigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource Brush.DataGrid.Row.Background.Selected}" />
                                            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Accent.Primary}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn x:Name="ActiveColumn" Header="Active" SortMemberPath="ActiveSortOrder" Width="90" MinWidth="85">
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="Padding" Value="0" />
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid HorizontalAlignment="Center">
                                                <ui:ToggleSwitch IsOn="{Binding IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 HorizontalAlignment="Center"
                                                 Toggled="ActiveToggle_OnToggled"
                                                 PreviewMouseLeftButtonDown="ActiveToggle_OnPreviewMouseLeftButtonDown"
                                                 PreviewMouseLeftButtonUp="ActiveToggle_OnPreviewMouseLeftButtonUp"
                                                 PreviewMouseMove="ActiveToggle_OnPreviewMouseMove"
                                                 Margin="12,0"
                                                 OnContent="{x:Null}"
                                                 OffContent="{x:Null}">
                                                    <ui:ToggleSwitch.Style>
                                                        <Style TargetType="{x:Type ui:ToggleSwitch}" BasedOn="{StaticResource IMM.ToggleSwitchBaseStyle}">
                                                            <Setter Property="IsEnabled" Value="{Binding CanToggle}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding DataContext.SearchModDatabase, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                                                    <Setter Property="IsEnabled" Value="False" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ui:ToggleSwitch.Style>
                                                </ui:ToggleSwitch>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn x:Name="IconColumn" Header="Icon" Width="76" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="Padding" Value="0,0,12,0" />
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border Width="64" Height="64"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    ToolTipService.ShowDuration="60000"
                                    ToolTipService.InitialShowDelay="200">
                                                <ToolTipService.ToolTip>
                                                    <TextBlock Text="{Binding Tooltip}"
                                               FontFamily="Segoe UI"
                                               FontSize="12"
                                               FontWeight="Normal"
                                               Foreground="{DynamicResource Brush.ToolTip.Text}"
                                               TextWrapping="Wrap" />
                                                </ToolTipService.ToolTip>
                                                <Image Source="{Binding Icon}" Stretch="Uniform" Margin="0" />
                                            </Border>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Name" Binding="{Binding DisplayName, Mode=OneWay}" Width="220" SortMemberPath="DisplayName" IsReadOnly="True">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="FontFamily" Value="Segoe UI" />
                                            <Setter Property="FontWeight" Value="Bold" />
                                            <Setter Property="ToolTipService.ShowDuration" Value="60000" />
                                            <Setter Property="ToolTipService.InitialShowDelay" Value="200" />
                                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="TextAlignment" Value="Left" />
                                            <Setter Property="Margin" Value="15,0,0,0" />
                                            <Setter Property="ToolTipService.ToolTip">
                                                <Setter.Value>
                                                    <TextBlock Text="{Binding Tooltip}"
                                               FontFamily="Segoe UI"
                                               FontSize="12"
                                               FontWeight="Normal"
                                               Foreground="{DynamicResource Brush.ToolTip.Text}"
                                               TextWrapping="Wrap" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn x:Name="InstalledColumn" Header="Installed" Width="85" IsReadOnly="True" Visibility="Collapsed">
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="✓"
                                       Foreground="{DynamicResource Brush.Accent.Primary}"
                                       FontSize="16"
                                       FontWeight="Bold"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsInstalled}" Value="True">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn x:Name="VersionColumn"
                                     Header="Version"
                                     Binding="{Binding VersionDisplay, Mode=OneWay}"
                                     Width="85"
                                     IsReadOnly="True"
                                     MinWidth="80">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="TextAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Latest Version" Binding="{Binding LatestDatabaseVersionDisplay, Mode=OneWay}" SortMemberPath="LatestVersionSortKey" Width="140" MinWidth="139" IsReadOnly="True">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="Padding" Value="4,2" />
                                            <Setter Property="Margin" Value="2" />
                                            <Setter Property="ToolTipService.ShowDuration" Value="60000" />
                                            <Setter Property="ToolTip">
                                                <Setter.Value>
                                                    <ToolTip MaxHeight="600"
                                                 Padding="0">
                                                        <Border MaxHeight="600"
                                                    ClipToBounds="True">
                                                            <ItemsControl ItemsSource="{Binding NewerReleaseChangelogs}">
                                                                <ItemsControl.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <StackPanel Margin="0,0,0,12">
                                                                            <TextBlock Text="{Binding Version}"
                                                                               FontWeight="Bold"
                                                                               Margin="0,0,0,4"
                                                                               Foreground="{DynamicResource Brush.ToolTip.Text}" />
                                                                            <TextBlock Text="{Binding Changelog}"
                                                                               TextWrapping="Wrap"
                                                                               Foreground="{DynamicResource Brush.ToolTip.Text}" />
                                                                        </StackPanel>
                                                                    </DataTemplate>
                                                                </ItemsControl.ItemTemplate>
                                                            </ItemsControl>
                                                        </Border>
                                                    </ToolTip>
                                                </Setter.Value>
                                            </Setter>
                                            <EventSetter Event="FrameworkElement.ToolTipOpening" Handler="LatestVersionTextBlock_OnToolTipOpening" />
                                            <EventSetter Event="FrameworkElement.ToolTipClosing" Handler="LatestVersionTextBlock_OnToolTipClosing" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding ShouldHighlightLatestVersion}" Value="True" />
                                                        <Condition Binding="{Binding DataContext.SearchModDatabase, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" Value="{DynamicResource Brush.Accent.Primary}" />
                                                    <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                                                </MultiDataTrigger>
                                                <DataTrigger Binding="{Binding HasNewerReleaseChangelogs}" Value="False">
                                                    <Setter Property="ToolTip" Value="{x:Null}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn x:Name="DownloadsColumn"
                                     Width="120"
                                     MinWidth="110"
                                     IsReadOnly="True">
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="{Binding DataContext.DownloadsColumnHeader, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                    </DataGridTextColumn.Header>
                                    <DataGridTextColumn.Binding>
                                        <MultiBinding Converter="{StaticResource IMM.DownloadMetricDisplayConverter}">
                                            <Binding Path="DataContext.IsShowingRecentDownloadMetric" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" />
                                            <Binding Path="DownloadsDisplay" />
                                            <Binding Path="RecentDownloadsDisplay" />
                                        </MultiBinding>
                                    </DataGridTextColumn.Binding>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>



                                <DataGridTextColumn Header="Authors" Binding="{Binding AuthorsDisplay, Mode=OneWay}" Width="150" IsReadOnly="True">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="TextWrapping" Value="NoWrap" />
                                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="TextAlignment" Value="Center" />
                                            <Setter Property="ToolTipService.ShowDuration" Value="60000" />
                                            <Setter Property="ToolTipService.InitialShowDelay" Value="200" />
                                            <Setter Property="ToolTipService.ToolTip">
                                                <Setter.Value>
                                                    <TextBlock Text="{Binding AuthorsDisplay}"
                                               FontFamily="Segoe UI"
                                               FontSize="12"
                                               Foreground="{DynamicResource Brush.ToolTip.Text}"
                                               TextWrapping="Wrap"
                                               MaxWidth="300" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn x:Name="TagsColumn"
                                                Header="Tags"
                                                Width="280"
                                                MinWidth="180"
                                                IsReadOnly="True"
                                                CanUserSort="False">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <Grid Background="Transparent"
                                          Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type DataGridColumnHeader}}}">
                                                <ToggleButton x:Name="TagsHeaderToggle"
                                                      Content="{Binding DataContext.TagsColumnHeader, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                      HorizontalAlignment="Stretch"
                                                      Style="{StaticResource IMM.TagHeaderToggleButtonStyle}" />
                                                <Popup PlacementTarget="{Binding ElementName=TagsHeaderToggle}"
                                               Placement="Bottom"
                                               IsOpen="{Binding IsChecked, ElementName=TagsHeaderToggle, Mode=TwoWay}"
                                               StaysOpen="False"
                                               AllowsTransparency="True"
                                               Focusable="False">
                                                    <Border Background="{DynamicResource Brush.Panel.Primary.Background.Solid}"
                                                    BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                                                    BorderThickness="1"
                                                    CornerRadius="6"
                                                    Padding="8"
                                                    MinWidth="440">
                                                        <ScrollViewer MaxHeight="260"
                                                              HorizontalScrollBarVisibility="Disabled"
                                                              VerticalScrollBarVisibility="Auto">
                                                            <ScrollViewer.Resources>
                                                                <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource IMM.DataGridScrollBarStyle}" />
                                                                <Style TargetType="{x:Type Thumb}" BasedOn="{StaticResource IMM.DataGridScrollBarThumbStyle}" />
                                                            </ScrollViewer.Resources>
                                                            <ItemsControl ItemsPanel="{StaticResource IMM.TagFilterItemsPanelTemplate}">
                                                                <ItemsControl.Style>
                                                                    <Style TargetType="{x:Type ItemsControl}">
                                                                        <Setter Property="ItemsSource"
                                                                        Value="{Binding DataContext.InstalledTagFilters, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding DataContext.SearchModDatabase, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                                                 Value="True">
                                                                                <Setter Property="ItemsSource"
                                                                                Value="{Binding DataContext.ModDatabaseTagFilters, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </ItemsControl.Style>
                                                                <ItemsControl.ItemTemplate>
                                                                    <DataTemplate DataType="{x:Type viewModels:TagFilterOptionViewModel}">
                                                                        <ToggleButton Style="{StaticResource IMM.TagFilterToggleButtonStyle}"
                                                                              Content="{Binding Name}"
                                                                              IsChecked="{Binding IsSelected, Mode=TwoWay}" />
                                                                    </DataTemplate>
                                                                </ItemsControl.ItemTemplate>
                                                            </ItemsControl>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Popup>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Border x:Name="TagsContainer"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Center"
                                                MaxHeight="{StaticResource IMM.TagRowMaxHeight}"
                                                ClipToBounds="True">
                                                    <ItemsControl x:Name="TagsItemsControl"
                                                          Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type DataGridCell}}}"
                                                          HorizontalAlignment="Left"
                                                          ItemsSource="{Binding DatabaseTags}"
                                                          ItemTemplate="{StaticResource IMM.TagBadgeTemplate}" ItemsPanel="{StaticResource IMM.TagItemsPanelTemplate}"/>
                                                </Border>
                                                <TextBlock x:Name="NoTagsText"
                                                   Text="—"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Visibility="Collapsed" />
                                            </Grid>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding DatabaseTags.Count}" Value="0">
                                                    <Setter TargetName="TagsContainer" Property="Visibility" Value="Collapsed" />
                                                    <Setter TargetName="NoTagsText" Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DataContext.IsCompactView, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                                    <Setter TargetName="TagsContainer" Property="MaxHeight" Value="{StaticResource IMM.TagRowCompactMaxHeight}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn x:Name="StatusColumn" Header="Status" Width="80" IsReadOnly="True" SortMemberPath="StatusSortOrder">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid HorizontalAlignment="Center"
                                      VerticalAlignment="Center">
                                                <Viewbox x:Name="StatusIconViewbox"
                                             Width="32"
                                             Height="32">
                                                    <Grid Width="32"
                                              Height="32">
                                                        <Image x:Name="ErrorIcon"
                                                   Width="32"
                                                   Height="32"
                                                   Stretch="Uniform"
                                                   Source="/error.png"
                                                   Visibility="Collapsed" />
                                                        <Image x:Name="WarningIcon"
                                                   Width="32"
                                                   Height="32"
                                                   Stretch="Uniform"
                                                   Source="/warning.png"
                                                   Visibility="Collapsed" />
                                                    </Grid>
                                                </Viewbox>
                                            </Grid>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding DataContext.IsCompactView, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                                    <Setter TargetName="StatusIconViewbox" Property="Width" Value="22.5" />
                                                    <Setter TargetName="StatusIconViewbox" Property="Height" Value="22.5" />
                                                    <Setter TargetName="ErrorIcon" Property="Width" Value="22.5" />
                                                    <Setter TargetName="ErrorIcon" Property="Height" Value="22.5" />
                                                    <Setter TargetName="WarningIcon" Property="Width" Value="22.5" />
                                                    <Setter TargetName="WarningIcon" Property="Height" Value="22.5" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding StatusText}" Value="Error">
                                                    <Setter TargetName="ErrorIcon" Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding StatusText}" Value="Warning">
                                                    <Setter TargetName="WarningIcon" Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                            <Setter Property="ToolTip" Value="{Binding StatusDetails}" />
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Side"
                                    Binding="{Binding SideDisplay, Mode=OneWay}"
                                    SortMemberPath="Side"
                                    Width="90"
                                    MinWidth="80"
                                    IsReadOnly="True">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="TextAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                </Border>
                <TextBlock Grid.Row="1"
                           Panel.ZIndex="1"
                           Margin="32"
                           Text="{Binding NoModsFoundMessage}"
                           TextWrapping="Wrap"
                           TextAlignment="Center"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="16"
                           Foreground="{DynamicResource Brush.Text.Primary}"
                           IsHitTestVisible="False">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TotalMods}" Value="0" />
                                        <Condition Binding="{Binding SearchModDatabase}" Value="False" />
                                        <Condition Binding="{Binding IsViewingCloudModlists}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Visible" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Grid Grid.RowSpan="2" Margin="0,0,-29,0">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsViewingCloudModlists}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Border Margin="0,0,0,166"
                            Grid.RowSpan="2"
                            Background="Transparent"
                            BorderBrush="{DynamicResource Brush.SunkenSurface.Bevel.Light}"
                            BorderThickness="0,0,2,2"
                            CornerRadius="0"
                            SnapsToDevicePixels="True">
                        <Border Background="Transparent"
                                BorderBrush="{DynamicResource Brush.SunkenSurface.Bevel.Dark}"
                                BorderThickness="2,2,0,0"
                                CornerRadius="0"
                                SnapsToDevicePixels="True">
                            <DataGrid x:Name="CloudModlistsDataGrid"
                                      ItemsSource="{Binding CloudModlistsView}"
                                      AutoGenerateColumns="False"
                                      CanUserAddRows="False"
                                      CanUserDeleteRows="False"
                                      IsReadOnly="True"
                                      SelectionMode="Single"
                                      SelectionUnit="FullRow"
                                      IsEnabled="{Binding CanAccessCloudModlists}"
                                      GridLinesVisibility="None"
                                      RowHeaderWidth="0"
                                      BorderThickness="0,1,2,1"
                                      HorizontalGridLinesBrush="Transparent"
                                      VerticalGridLinesBrush="Transparent"
                                      HeadersVisibility="Column"
                                      ui:ControlHelper.CornerRadius="0"
                                      FontSize="15"
                                      Foreground="{DynamicResource Brush.Text.Primary}"
                                      SelectionChanged="CloudModlistsDataGrid_OnSelectionChanged"
                                      Background="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                                      BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}">
                                <DataGrid.Resources>
                                    <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource IMM.DataGridScrollBarStyle}" />
                                    <Style TargetType="{x:Type Thumb}" BasedOn="{StaticResource IMM.DataGridScrollBarThumbStyle}" />
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="TextWrapping" Value="Wrap" />
                                    </Style>
                                    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource IMM.PrimaryDataGridColumnHeaderStyle}" />
                                </DataGrid.Resources>
                                <DataGrid.RowBackground>
                                    <DynamicResource ResourceKey="Brush.Panel.Primary.Background.Solid"/>
                                </DataGrid.RowBackground>
                                <DataGrid.CellStyle>
                                    <StaticResource ResourceKey="IMM.DataGridCellBaseStyle" />
                                </DataGrid.CellStyle>

                                <DataGrid.RowHeaderStyle>
                                    <Style />
                                </DataGrid.RowHeaderStyle>
                                <DataGrid.RowStyle>
                                    <Style TargetType="{x:Type DataGridRow}">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Panel.Secondary.Background.Solid}" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="Margin" Value="10,2,10,2" />
                                        <Setter Property="Foreground"
                                        Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Setter Property="Padding">
                                            <Setter.Value>
                                                <MultiBinding Converter="{StaticResource IMM.RowPaddingOffsetConverter}">
                                                    <Binding Source="{StaticResource IMM.RowPaddingBase}" />
                                                    <Binding Source="{StaticResource IMM.NormalRowHeightOffset}" />
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Height" Value="{x:Static sys:Double.NaN}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type DataGridRow}">
                                                    <Border x:Name="RowBorder"
                                                    Background="{DynamicResource Brush.Panel.Primary.Background.Solid}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="0"
                                                    Margin="4,0,4,4"
                                                    SnapsToDevicePixels="True">
                                                        <Grid>
                                                            <Border x:Name="SelectionOverlay"
                                                            Background="{DynamicResource Brush.Accent.Primary}"
                                                            Opacity="0"
                                                            CornerRadius="0"
                                                            IsHitTestVisible="False" />
                                                            <Border x:Name="HoverOverlay"
                                                            Background="{DynamicResource Brush.Button.Primary.Background.Hover}"
                                                            Opacity="0"
                                                            CornerRadius="0"
                                                            IsHitTestVisible="False" />
                                                            <Border Padding="{TemplateBinding Padding}"
                                                            Background="Transparent"
                                                            CornerRadius="0">
                                                                <SelectiveScrollingGrid>
                                                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*" />
                                                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                                                    <SelectiveScrollingGrid.RowDefinitions>
                                                                        <RowDefinition Height="*" />
                                                                        <RowDefinition Height="Auto" />
                                                                    </SelectiveScrollingGrid.RowDefinitions>
                                                                    <DataGridCellsPresenter Grid.Column="0"
                                                                                    SelectiveScrollingGrid.SelectiveScrollingOrientation="Both" />
                                                                    <DataGridDetailsPresenter Grid.Column="0"
                                                                                     Grid.Row="1"
                                                                                     SelectiveScrollingGrid.SelectiveScrollingOrientation="Horizontal"
                                                                                     Visibility="{TemplateBinding DetailsVisibility}" />
                                                                </SelectiveScrollingGrid>
                                                            </Border>
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="HoverOverlay" Property="Opacity" Value="0.1" />
                                                            <Setter TargetName="RowBorder" Property="BorderBrush" Value="{DynamicResource Brush.Button.Primary.Background.Hover}" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="False">
                                                            <Setter TargetName="HoverOverlay" Property="Opacity" Value="0" />
                                                        </Trigger>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter TargetName="SelectionOverlay" Property="Opacity" Value="0.25" />
                                                            <Setter TargetName="HoverOverlay" Property="Opacity" Value="0" />
                                                            <Setter TargetName="RowBorder" Property="BorderBrush" Value="{DynamicResource Brush.Panel.Secondary.Background.Solid}" />
                                                            <Setter TargetName="RowBorder" Property="BorderThickness" Value="0" />
                                                        </Trigger>
                                                        <Trigger Property="IsSelected" Value="False">
                                                            <Setter TargetName="SelectionOverlay" Property="Opacity" Value="0" />
                                                            <Setter TargetName="RowBorder" Property="BorderThickness" Value="0" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Foreground"
                                                Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.RowStyle>
                                <DataGrid.Style>
                                    <Style TargetType="{x:Type DataGrid}">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasCloudModlists}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.Style>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name"
                                                Binding="{Binding DisplayName}"
                                                Width="260"
                                                MinWidth="200"
                                                IsReadOnly="True">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="ToolTipService.ShowDuration" Value="60000" />
                                                <Setter Property="ToolTip" Value="{Binding DisplayName}" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                                <Setter Property="Margin" Value="10,0,0,0" />
                                                <Setter Property="FontWeight" Value="Bold" />
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Uploader"
                                                Binding="{Binding Uploader}"
                                                Width="220"
                                                MinWidth="180"
                                                IsReadOnly="True">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="TextAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Version"
                                                Width="120"
                                                Binding="{Binding Version, FallbackValue=—, TargetNullValue=—}"
                                                IsReadOnly="True">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="TextAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTemplateColumn Header="Mods" Width="200" MinWidth="180" IsReadOnly="True">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <ComboBox x:Name="ModsComboBox"
                                                      ItemsSource="{Binding Mods, Mode=OneWay}"
                                                      IsEditable="True"
                                                      IsReadOnly="True"
                                                      SelectedIndex="-1"
                                                      MaxDropDownHeight="240" />
                                                    <TextBlock Text="{Binding ModsSummary, Mode=OneWay}"
                                                       Foreground="{DynamicResource Brush.Text.Primary}"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       IsHitTestVisible="False">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                                <Setter Property="Margin" Value="8,0,24,0" />
                                                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                                <Setter Property="TextAlignment" Value="Center" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsDropDownOpen, ElementName=ModsComboBox}" Value="True">
                                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                        <DataGridTemplateColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IMM.DataGridCellBaseStyle}">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTemplateColumn.CellStyle>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Border>
                    </Border>

                    <TextBlock Grid.Row="1"
                               Text="No cloud modlists have been uploaded yet."
                               FontSize="16"
                               Foreground="{DynamicResource Brush.Text.Primary}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               TextAlignment="Center"
                               TextWrapping="Wrap">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasCloudModlists}" Value="False">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Border Margin="0,0,0,10" Grid.Row="1" Width="614" Background="{DynamicResource Brush.ModCard.Background.Active}" CornerRadius="10,10,10,10" Visibility="Visible" HorizontalAlignment="Center" Height="151" VerticalAlignment="Bottom">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="6" ShadowDepth="3" Direction="270" Opacity="0.2"/>
                        </Border.Effect>

                        <Grid Height="151" VerticalAlignment="Center" HorizontalAlignment="Left" Width="1152"
                              IsEnabled="{Binding CanAccessCloudModlists}">
                            <Button x:Name="InstallCloudModlistButton"
                                Content="Install Selected Modlist"
                                Padding="12,6"
                                MinWidth="195"
                                IsEnabled="False"
                                Visibility="Visible"
                                Click="InstallCloudModlistButton_OnClick" Margin="224,109,0,0" Height="32" Width="170" HorizontalAlignment="Left" VerticalAlignment="Top" />
                            <Button x:Name="SaveCloudModlistButton"
                                Content="Save Modlist (Cloud)"
                                Padding="12,6"
                                Margin="10,109,0,0"
                                MinWidth="165"
                                Click="SaveCloudModlistButton_OnClick" Height="32" Width="170" VerticalAlignment="Top" HorizontalAlignment="Left" />
                            <Button x:Name="ModifyCloudModlistsButton"
                                Content="Modify Modlists (Cloud)"
                                Padding="12,6"
                                Margin="10,66,0,0"
                                MinWidth="165"
                                Click="ModifyCloudModlistsButton_OnClick" Height="32" Width="170" VerticalAlignment="Top" HorizontalAlignment="Left" />
                            <Button x:Name="RefreshCloudModlistsButton"
                                Content="Refresh"
                                Padding="12,6"
                                MinWidth="100"
                                Click="RefreshCloudModlistsButton_OnClick" Margin="476,109,0,0" Height="32" Width="100" HorizontalAlignment="Left" VerticalAlignment="Top" />
                            <TextBox x:Name="UsernameTextbox"
                                     HorizontalAlignment="Left"
                                     Margin="10,28,0,0"
                                     TextWrapping="Wrap"
                                     Text=""
                                     VerticalAlignment="Top"
                                     Width="170"
                                     IsReadOnly="True"
                                     IsTabStop="False"
                                     Background="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                                     BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                                     Foreground="{DynamicResource Brush.Text.Primary}"
                                     ToolTip="Change your player name in Vintage Story to update this username."/>
                            <TextBlock HorizontalAlignment="Left"
                                       Margin="10,10,0,0"
                                       TextWrapping="Wrap"
                                       Text="Username:"
                                       VerticalAlignment="Top"
                                       Foreground="{DynamicResource Brush.Text.Primary}"/>
                            <Border HorizontalAlignment="Left" Height="88" Margin="224,10,0,0"  Padding="10" VerticalAlignment="Top" CornerRadius="5,5,5,5" Background="{DynamicResource Brush.ModCard.Background.Active}">
                                <Grid>
                                    <TextBlock x:Name="SelectedModlistDescription"
                                               HorizontalAlignment="Left"
                                               Margin="0,16,0,0"
                                               TextWrapping="Wrap"
                                               Text=""
                                               VerticalAlignment="Top"
                                               Height="72"
                                               Width="352"
                                               Foreground="{DynamicResource Brush.Text.Primary}"/>
                                    <TextBlock x:Name="SelectedModlistTitle" HorizontalAlignment="Left" TextWrapping="Wrap" Text="" VerticalAlignment="Top" FontWeight="Bold"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
            <ListView x:Name="ModDatabaseCardsListView"
                      ItemsSource="{Binding CurrentModsView}"
                      Background="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                      BorderThickness="1,1,1,1"
                      Margin="0,32,0,0"
                      ui:ControlHelper.CornerRadius="0"
                      SelectionMode="Single"
                      SelectionChanged="ModDatabaseCardsListView_OnSelectionChanged"
                      PreviewMouseWheel="ModsDataGrid_OnPreviewMouseWheel"
                      ScrollViewer.ScrollChanged="ModDatabaseCardsListView_OnScrollChanged"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      ScrollViewer.CanContentScroll="True"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      Grid.RowSpan="2" BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}" FontSize="16">
                <ListView.Style>
                    <Style TargetType="{x:Type ListView}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SearchModDatabase}" Value="True" />
                                    <Condition Binding="{Binding UseModDbDesignView}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Style>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"
                                   HorizontalAlignment="Center"
                                   Margin="0,20,0,72"
                                   ItemWidth="{Binding ConverterParameter=496, Converter={StaticResource IMM.ScaledDoubleConverter}, Source={StaticResource IMM.ModDbCardScale}}" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <EventSetter Event="UIElement.PreviewMouseLeftButtonDown" Handler="ModDatabaseCard_OnPreviewMouseLeftButtonDown" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type viewModels:ModListItemViewModel}">
                        <Border Width="480"
                                Height="480"
                                Margin="{Binding LayoutTransform.(ScaleTransform.ScaleX), ConverterParameter=0\,0\,16\,16, Converter={StaticResource IMM.ScaledThicknessConverter}, RelativeSource={RelativeSource Mode=Self}}"
                                CornerRadius="12"
                                ClipToBounds="False">
                            <Border.LayoutTransform>
                                <ScaleTransform ScaleX="{StaticResource IMM.ModDbCardScale}"
                                                ScaleY="{StaticResource IMM.ModDbCardScale}" />
                            </Border.LayoutTransform>
                            <Border.Effect>
                                <DropShadowEffect Color="{Binding Source={StaticResource Brush.DataGrid.RowShadow}, Path=Color}" BlurRadius="2" Direction="210" ShadowDepth="2" Opacity="0.5"/>

                            </Border.Effect>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Panel.Secondary.Background.Solid}" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="Background" Value="{DynamicResource Brush.Panel.Primary.Background.Solid}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Button.Primary.Background.Hover}" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Accent.Primary}" />
                                            <Setter Property="BorderThickness" Value="2" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Border x:Name="CardImageContainer"
                                        CornerRadius="12,12,0,0"
                                        ClipToBounds="True">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="/VintageStoryModManager;component/Resources/mod-default.png"
                                                                Stretch="UniformToFill"
                                                                AlignmentX="Center"
                                                                AlignmentY="Top" />
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasModDatabasePreviewImage}" Value="True">
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <ImageBrush ImageSource="{Binding ModDatabasePreviewImage}"
                                                                        Stretch="UniformToFill"
                                                                        AlignmentX="Center"
                                                                        AlignmentY="Top" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Grid>
                                        <TextBlock Text="Installed"
                                                   Margin="8"
                                                   Padding="6,2"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Top"
                                                   FontSize="12"
                                                   FontWeight="SemiBold"
                                                   Foreground="{DynamicResource Brush.Text.Emphasis}"
                                                   Background="{DynamicResource Brush.Overlay.Success.Background}">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsInstalled}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <Border HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                Margin="0,8,8,0"
                                                Background="{DynamicResource Brush.DataGrid.Background}"
                                                CornerRadius="4"
                                                Padding="3">
                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding LatestReleaseIsCompatible}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock Text="Compatible"
                                                       
                                                       Foreground="{DynamicResource Brush.Text.Body}"
                                                       FontSize="16" />
                                        </Border>
                                    </Grid>
                                </Border>

                                <Border Grid.Row="1"
                                        Background="{DynamicResource Brush.Panel.Primary.Background.Solid}"
                                        Padding="12,10,12,12"
                                        CornerRadius="0,0,12,12">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <StackPanel Grid.Column="0"
                                                    Grid.RowSpan="2"
                                                    Orientation="Vertical">
                                            <Button Command="{Binding OpenModDatabasePageCommand}"
                                                    FontSize="24"
                                                    FontWeight="SemiBold"
                                                    Padding="0"
                                                    Margin="0,0,0,4"
                                                    Background="Transparent"
                                                    BorderThickness="0"
                                                    HorizontalAlignment="Left"
                                                    Cursor="Hand"
                                                    IsEnabled="{Binding HasModDatabasePageLink}">
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <ContentPresenter RecognizesAccessKey="True" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource Brush.Button.Primary.Background.Hover}" />
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Placeholder}" />
                                                                <Setter Property="Cursor" Value="Arrow" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                                <StackPanel Orientation="Horizontal"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Left"
                                                            Margin="0">
                                                    <TextBlock Text="{Binding DisplayName}"
                                                               VerticalAlignment="Center"
                                                               TextTrimming="CharacterEllipsis"
                                                               TextWrapping="NoWrap"
                                                               Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                                                    <TextBlock Text="&#xE71B;"
                                                               FontFamily="Segoe MDL2 Assets"
                                                               Margin="6,0,0,0"
                                                               VerticalAlignment="Center"
                                                               Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                                                </StackPanel>
                                            </Button>
                                            <TextBlock Text="{Binding DescriptionDisplay}"
                                                       Margin="0,4,0,6"
                                                       TextWrapping="Wrap"
                                                       TextTrimming="CharacterEllipsis"
                                                       FontSize="20"
                                                       Foreground="{DynamicResource Brush.Text.Primary}"
                                                       MaxHeight="60" />
                                            <TextBlock Text="{Binding DatabaseTagsDisplay}"
                                                       FontSize="12"
                                                       Foreground="{DynamicResource Brush.Text.Placeholder}"
                                                       TextTrimming="CharacterEllipsis"
                                                       TextWrapping="NoWrap">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding DatabaseTagsDisplay}" Value="—">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                        <StackPanel Grid.Column="1"
                                                    Grid.Row="0"
                                                    Orientation="Vertical"
                                                    HorizontalAlignment="Right"
                                                    Margin="12,0,0,0">
                                            <StackPanel Orientation="Horizontal"
                                                        Margin="0,0,0,6"
                                                        VerticalAlignment="Top">
                                                <TextBlock Text="&#xE118;"
                                                           FontFamily="Segoe MDL2 Assets"
                                                           FontSize="14"
                                                           Margin="0,0,4,0"
                                                           Foreground="{DynamicResource Brush.Text.Primary}" />
                                                <TextBlock FontSize="20"
                                                           FontWeight="SemiBold"
                                                           Foreground="{DynamicResource Brush.Text.Primary}">
                                                    <TextBlock.Text>
                                                        <MultiBinding Converter="{StaticResource IMM.DownloadMetricDisplayConverter}">
                                                            <Binding Path="DataContext.IsShowingRecentDownloadMetric" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" />
                                                            <Binding Path="DownloadsDisplay" />
                                                            <Binding Path="RecentDownloadsDisplay" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="&#xE15F;"
                                                           FontFamily="Segoe MDL2 Assets"
                                                           FontSize="14"
                                                           Margin="0,0,4,0"
                                                           Foreground="{DynamicResource Brush.Text.Primary}" />
                                                <TextBlock Text="{Binding CommentsDisplay}"
                                                           FontSize="20"
                                                           FontWeight="SemiBold"
                                                           Foreground="{DynamicResource Brush.Text.Primary}" />
                                            </StackPanel>
                                        </StackPanel>
                                        <Button Grid.Column="1"
                                                Grid.Row="1"
                                                Padding="12,6"
                                                Width="90"
                                                Height="30"
                                                HorizontalAlignment="Right"
                                                Margin="0,12,0,0"
                                                Background="{DynamicResource Brush.Button.Primary.Background.Normal}"
                                                BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                                                Click="InstallModButton_OnClick"
                                                ToolTip="{Binding InstallButtonToolTip}">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                                    <Setter Property="IsEnabled" Value="{Binding HasDownloadableRelease}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsInstalled}" Value="True">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <TextBlock Text="Install"
                                                       VerticalAlignment="Center"
                                                       Foreground="{DynamicResource Brush.Text.Primary}" />
                                        </Button>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Button Grid.Row="1"
                    Content="Load more pages"
                    Command="{Binding LoadMoreModDatabaseResultsCommand}"
                    HorizontalAlignment="Left"
                    Margin="518,0,0,10"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="0"
                    Padding="0"
                    Foreground="{DynamicResource Brush.Accent.Primary}"
                    Cursor="Hand"
                    FontSize="14"
                    FontWeight="SemiBold" Width="124" Height="25" VerticalAlignment="Bottom">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding SearchModDatabase}" Value="True" />
                                    <Condition Binding="{Binding IsLoadMoreModDatabaseButtonVisible}" Value="True" />
                                    <Condition Binding="{Binding IsLoadMoreModDatabaseScrollThresholdReached}" Value="True" />
                                    <Condition Binding="{Binding IsModDatabaseLoading}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <Grid x:Name="BOTTOM" Margin="16,4,16,4" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Border x:Name="StatusTextBorder"
                    HorizontalAlignment="Left"
                    Height="50"
                    VerticalAlignment="Center"
                    Width="376"
                    Background="Transparent"
                    BorderBrush="{DynamicResource Brush.SunkenSurface.Bevel.Light}"
                    BorderThickness="0,0,2,2"
                    CornerRadius="3"
                    SnapsToDevicePixels="True">
                <Border Background="{DynamicResource Brush.SunkenSurface.Background}"
                        BorderBrush="{DynamicResource Brush.SunkenSurface.Bevel.Dark}"
                        BorderThickness="2,2,0,0"
                        CornerRadius="3"
                        SnapsToDevicePixels="True">
                    <Grid>
                        <TextBlock Grid.Column="0"
                                   Text="{Binding StatusMessage}"
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="14"
                                   Foreground="{DynamicResource Brush.Text.Primary}"
                                   FontWeight="Bold"
                                   Padding="4,2,4,2">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasStatusMessage}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsErrorStatus}" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Emphasis}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </Border>
            </Border>

            <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top" Margin="0,18,0,0">
                <Button Content="Update All"
                            Margin="0,0,4,0"
                            Width="125"
                            Background="{DynamicResource Brush.Button.Primary.Background.Normal}"
                            BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                            Click="UpdateAllModsMenuItem_OnClick"
                            Height="32" Padding="6,6,6,6" />
                <Button Content="Open Logs Folder"
                            Margin="0,0,4,0"
                            Width="125"
                            Background="{DynamicResource Brush.Button.Primary.Background.Normal}"
                            BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                            Click="OpenLogsFolderButton_OnClick"
                            Height="32" Padding="6,6,6,6" />
                <Button Content="Open Config Folder"
                            Margin="0,0,4,0"
                            Width="125"
                            Background="{DynamicResource Brush.Button.Primary.Background.Normal}"
                            BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                            Click="OpenConfigFolderButton_OnClick"
                            Height="32" Padding="6,6,6,6" />
                <Button Content="Open Mods Folder"
                            Margin="0,0,4,0"
                            Width="125"
                            Background="{DynamicResource Brush.Button.Primary.Background.Normal}"
                            BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                            Click="OpenModFolderButton_OnClick"
                            Height="32" Padding="6,6,6,6" />
                <Button Content="Launch Vintage Story"
                            Width="150"
                            Background="{DynamicResource Brush.Button.Primary.Background.Normal}"
                            BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                            Click="LaunchGameButton_OnClick"
                            Height="32"
                            FontWeight="Bold" />
            </StackPanel>
            <ui:ProgressRing
                        HorizontalAlignment="Left"
                        IsActive="{Binding IsBusy}"
                        Visibility="{Binding IsBusy, Converter={StaticResource IMM.VisibleWhenTrueConverter}}"
                        Foreground="{DynamicResource Brush.Accent.Primary}" Margin="388,0,0,0" VerticalAlignment="Stretch" Width="40" Height="40" />
        </Grid>
        <Border Background="{DynamicResource Brush.ModCard.Background.Active}" x:Name="MODINFO_border"
                BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                BorderThickness="0"
                CornerRadius="15,15,15,15" Margin="0,255,40,185" Grid.Row="1" Height="201" HorizontalAlignment="Right" Width="326" Panel.ZIndex="400">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Setter Property="IsHitTestVisible" Value="False" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasSelectedMods}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                            <Setter Property="IsHitTestVisible" Value="True" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsViewingCloudModlists}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Setter Property="IsHitTestVisible" Value="False" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SearchModDatabase}" Value="True" />
                                <Condition Binding="{Binding UseModDbDesignView}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Setter Property="IsHitTestVisible" Value="False" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border.Effect>
                <DropShadowEffect Color="{DynamicResource Palette.BaseSurface.Shadowed}"
                                  BlurRadius="20"
                                  Direction="270"
                                  ShadowDepth="8"
                                  Opacity="0.2" />
            </Border.Effect>
            <Grid x:Name="MODINFO_grid" Height="223" Width="324" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="53*" />
                    <ColumnDefinition Width="28*" />
                </Grid.ColumnDefinitions>
                <Grid.Effect>
                    <DropShadowEffect BlurRadius="6"
                                      Direction="270"
                                      ShadowDepth="4"
                                      Opacity="0.1"
                                      Color="{DynamicResource Palette.BaseSurface.Shadowed}" />
                </Grid.Effect>
                <Button x:Name="SelectedModDatabasePageButton"
                Padding="12,6"
                Background="{DynamicResource Brush.Button.Primary.Background.Normal}"
                BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                Visibility="Visible"
                IsEnabled="False"
                Click="ModDatabasePageButton_OnClick"
                ToolTip="{Binding ModDatabasePageUrlDisplay}"
                VerticalContentAlignment="Center"
                Content="Mod Page" Height="30" Width="92" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Column="1" Margin="0,45,0,0" />
                <Button x:Name="SelectedModEditConfigButton"
                Padding="12,6"
                Background="{DynamicResource Brush.Button.Primary.Background.Normal}"
                BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                Visibility="Visible"
                IsEnabled="False"
                Click="EditConfigButton_OnClick"
                VerticalContentAlignment="Stretch"
                Content="Edit Config" Height="30" Width="92" HorizontalContentAlignment="Stretch" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0" Grid.Column="1" />
                <Button x:Name="SelectedModDeleteButton"
                Padding="12,6"
                Background="{DynamicResource Brush.Status.Error}"
                BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                Visibility="Visible"
                IsEnabled="False"
                Click="DeleteModButton_OnClick" Height="30" Width="92" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,80,0,0" Grid.Column="1">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="ToolTip" Value="{Binding DisplayName, StringFormat=Delete \{0\}}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.HasMultipleSelectedMods, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                    <Setter Property="ToolTip" Value="Delete selected mods" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">

                        <TextBlock Text="Delete" VerticalAlignment="Center" Foreground="{DynamicResource Brush.Text.Primary}" />
                    </StackPanel>
                </Button>
                <Button x:Name="SelectedModFixButton"
                        Padding="12,6"
                        Background="{DynamicResource Brush.Status.Error}"
                        BorderBrush="{DynamicResource Brush.Text.Primary}"
                        Visibility="Collapsed"
                        IsEnabled="False"
                        Click="FixModButton_OnClick"
                        ToolTip="Resolve dependency issues" Height="30" Width="92" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,115,0,0" Grid.Column="1">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Background" Value="{DynamicResource Brush.Status.Error}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Brush.Text.Primary}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="Root"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                                Padding="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="True">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              RecognizesAccessKey="True" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="Root" Property="Opacity" Value="0.6" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Root" Property="Background" Value="{DynamicResource Brush.Status.Error}" />
                                                <Setter TargetName="Root" Property="BorderBrush" Value="{DynamicResource Brush.Text.Primary}" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="Root" Property="Background" Value="{DynamicResource Brush.Status.Error}" />
                                                <Setter TargetName="Root" Property="BorderBrush" Value="{DynamicResource Brush.Text.Primary}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">

                        <TextBlock Text="Fix" VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
                <Button x:Name="SelectedModInstallButton"
                Padding="12,6"
                Background="{DynamicResource Brush.Button.Primary.Background.Normal}"
                BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                Visibility="Visible"
                IsEnabled="False"
                Click="InstallModButton_OnClick"
                ToolTip="{Binding InstallButtonToolTip}" Height="30" Width="90" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,10,0,0" Grid.Column="1">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Text="Install" VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
                <ComboBox x:Name="SelectedModVersionComboBox"
                Width="166"
                Height="30"
                Padding="12,6"
                Background="{DynamicResource Brush.ComboBox.Background.Normal}"
                BorderBrush="{DynamicResource Brush.ComboBox.Border.Normal}"
                BorderThickness="1"
                Foreground="{DynamicResource Brush.Text.Primary}"
                ui:ControlHelper.CornerRadius="6"
                ItemsSource="{Binding SelectedMod.VersionOptions}"
                SelectedItem="{Binding SelectedMod.SelectedVersionOption, Mode=TwoWay}"
                SelectionChanged="SelectedModVersionComboBox_OnSelectionChanged"
                DropDownOpened="SelectedModVersionComboBox_OnDropDownOpened"
                VerticalAlignment="Top" HorizontalAlignment="Left" Margin="17,155,0,0">
                    <ComboBox.Resources>
                        <DataTemplate x:Key="SelectedModVersionTemplate" DataType="{x:Type viewModels:ModVersionOptionViewModel}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding SelectionDisplay}" />
                                <TextBlock Text="✓" Foreground="{DynamicResource Brush.Accent.Primary}" Margin="6,0,0,0">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsCompatible}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.Resources>
                    <ComboBox.Style>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Setter Property="IsEnabled" Value="False" />
                            <Setter Property="Background" Value="{DynamicResource Brush.ComboBox.Background.Normal}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedMod.HasVersionOptions}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="IsEnabled" Value="True" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.SearchModDatabase, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding HasMultipleSelectedMods}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                    <ComboBox.ItemTemplate>
                        <StaticResource ResourceKey="SelectedModVersionTemplate" />
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Button x:Name="SelectedModUpdateButton"
                Padding="12,6"
                Background="{DynamicResource Brush.Button.Primary.Background.Normal}"
                BorderBrush="{DynamicResource Brush.Panel.Secondary.Background.Solid}"
                Visibility="Visible"
                IsEnabled="False"
                Click="UpdateModButton_OnClick"
                ToolTip="{Binding UpdateButtonToolTip}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="116" Margin="198,155,0,0" Height="30" Grid.ColumnSpan="2">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Width="90" ><Run Text="Update to latest"/><LineBreak/><Run/></TextBlock>
                    </StackPanel>
                </Button>
                <TextBlock
                FontWeight="SemiBold"
                Foreground="{DynamicResource Brush.Text.Primary}"
                TextAlignment="Left" VerticalAlignment="Top" HorizontalAlignment="Left" Width="189" Margin="23,15,0,0" Height="25" FontSize="14">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{Binding SelectedMod.DisplayName}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasMultipleSelectedMods}" Value="True">
                                    <Setter Property="Text" Value="Multiple mods selected" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBlock
                Text="{Binding SelectedMod.DescriptionDisplay}"
                Foreground="{DynamicResource Brush.Text.Primary}"
                MaxWidth="420"
                TextWrapping="Wrap"
                TextTrimming="CharacterEllipsis"
                TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Top" Width="189" Height="105" MaxHeight="143" Margin="23,45,0,0" FontSize="14">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasMultipleSelectedMods}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>

        </Border>

    </Grid>
</Window>
