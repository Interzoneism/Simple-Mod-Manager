<Application x:Class="VintageStoryModManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:VintageStoryModManager.Converters"
             xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
             xmlns:primitives="clr-namespace:System.Windows.Controls.Primitives;assembly=PresentationFramework"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemeResources />
                <ui:XamlControlsResources />
                <ResourceDictionary Source="Resources/Themes/DarkVsTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="IMM.BooleanToVisibilityConverter" />
            <converters:ScaledThicknessConverter x:Key="IMM.ScaledThicknessConverter" />
            <converters:ScaledDoubleConverter x:Key="IMM.ScaledDoubleConverter" />
            <converters:DoubleOffsetConverter x:Key="IMM.DoubleOffsetConverter" />

            <ControlTemplate x:Key="IMM.SunkenListControlTemplate" TargetType="{x:Type ListBox}">
                <Border x:Name="TopAndLeft"
                        Background="Transparent"
                        BorderBrush="{DynamicResource Brush.SunkenSurface.Bevel.Light}"
                        BorderThickness="0,0,1,1"
                        CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                        SnapsToDevicePixels="True">
                    <Border x:Name="BottomAndRight"
                            Background="Transparent"
                            BorderBrush="{DynamicResource Brush.SunkenSurface.Bevel.Dark}"
                            BorderThickness="1,1,0,0"
                            CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Border x:Name="ChromeBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ScrollViewer"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                          CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </Border>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="ChromeBorder" Property="Opacity" Value="0.6" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="IMM.ToggleSwitchBaseStyle" TargetType="{x:Type ui:ToggleSwitch}">
                <Setter Property="Width" Value="52" />
                <Setter Property="Height" Value="24" />
                <Setter Property="Background" Value="{DynamicResource Brush.ToggleSwitch.Track.Background.Off}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.ToggleSwitch.Track.Background.Off}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="12,0,0,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ui:ToggleSwitch}">
                            <Grid x:Name="Root" Background="Transparent" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Grid x:Name="SwitchRoot"
                                      Width="{TemplateBinding Width}"
                                      Height="{TemplateBinding Height}"
                                      VerticalAlignment="Center"
                                      Margin="0">
                                    <Border x:Name="Track"
                                            CornerRadius="12"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}" />
                                    <Border x:Name="Thumb"
                                            Width="20"
                                            Height="20"
                                            CornerRadius="10"
                                            Margin="2"
                                            Background="{DynamicResource Brush.ToggleSwitch.Thumb.Background.Normal}"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center" />
                                </Grid>

                                <ContentPresenter x:Name="HeaderContent"
                                                  Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding Header}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsOn" Value="True">
                                    <Setter TargetName="Track" Property="Background" Value="{DynamicResource Brush.ToggleSwitch.Track.Background.On}" />
                                    <Setter TargetName="Track" Property="BorderBrush" Value="{DynamicResource Brush.ToggleSwitch.Track.Background.On}" />
                                    <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource Brush.ToggleSwitch.Thumb.Background.On}" />
                                    <Setter TargetName="Thumb" Property="HorizontalAlignment" Value="Right" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5" />
                                    <Setter TargetName="Track" Property="Background" Value="{DynamicResource Brush.ToggleSwitch.Track.Background.Disabled}" />
                                    <Setter TargetName="Track" Property="BorderBrush" Value="{DynamicResource Brush.ToggleSwitch.Track.Background.Disabled}" />
                                    <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource Brush.ToggleSwitch.Thumb.Background.Disabled}" />
                                    <Setter TargetName="HeaderContent" Property="Opacity" Value="0.6" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Track" Property="BorderBrush" Value="{DynamicResource Brush.ToggleSwitch.Hover.Border}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter TargetName="Track" Property="BorderBrush" Value="{DynamicResource Brush.ToggleSwitch.Focus.Border}" />
                                </Trigger>
                                <Trigger Property="Header" Value="{x:Null}">
                                    <Setter TargetName="HeaderContent" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ui:ToggleSwitch}" BasedOn="{StaticResource IMM.ToggleSwitchBaseStyle}" />

            <Style x:Key="IMM.ClearTextButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="24" />
                <Setter Property="Height" Value="24" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="12">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Hover}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Pressed}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                    <Setter Property="Opacity" Value="0.6" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IMM.DataGridScrollBarThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="MinHeight" Value="18" />
                <Setter Property="MinWidth" Value="18" />
                <Setter Property="Background" Value="{DynamicResource Brush.ScrollBar.Thumb}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.ScrollBar.Thumb}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    CornerRadius="4" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IMM.DataGridScrollBarButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="Background" Value="{DynamicResource Brush.ScrollBar.Button}" />
                <Setter Property="Foreground" Value="{DynamicResource Brush.ScrollBar.Glyph}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.ScrollBar.Button}" />
                <Setter Property="MinHeight" Value="18" />
                <Setter Property="MinWidth" Value="18" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    CornerRadius="3"
                                    SnapsToDevicePixels="True">
                                <Path x:Name="Arrow"
                                      Width="7"
                                      Height="7"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Stretch="Uniform"
                                      Data="M 0 4 L 3.5 0 L 7 4 Z"
                                      Fill="{TemplateBinding Foreground}"
                                      RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="{TemplateBinding Tag}" />
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource Brush.ScrollBar.Thumb}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource Brush.ScrollBar.Thumb}" />
                                    <Setter TargetName="Border" Property="Opacity" Value="0.85" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource Brush.ScrollBar.Track}" />
                                    <Setter TargetName="Arrow" Property="Opacity" Value="0.4" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IMM.DataGridScrollBarTrackButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IMM.DataGridScrollBarStyle" TargetType="{x:Type ScrollBar}">
                <Setter Property="Background" Value="{DynamicResource Brush.ScrollBar.Track}" />
                <Setter Property="Foreground" Value="{DynamicResource Brush.ScrollBar.Glyph}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.ScrollBar.Track}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Root" Background="Transparent" SnapsToDevicePixels="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <RepeatButton x:Name="LineDecreaseButton"
                                              Grid.Row="0"
                                              Grid.Column="0"
                                              Grid.ColumnSpan="3"
                                              Style="{StaticResource IMM.DataGridScrollBarButtonStyle}"
                                              Command="{x:Static primitives:ScrollBar.LineUpCommand}"
                                              Tag="0" />

                                <Border x:Name="TrackHost"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="3"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="3">
                                    <Track x:Name="PART_Track"
                                           Margin="0"
                                           Orientation="{TemplateBinding Orientation}"
                                           IsDirectionReversed="True"
                                           Maximum="{TemplateBinding Maximum}"
                                           Minimum="{TemplateBinding Minimum}"
                                           Value="{TemplateBinding Value}"
                                           ViewportSize="{TemplateBinding ViewportSize}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton x:Name="DecreasePage"
                                                          Style="{StaticResource IMM.DataGridScrollBarTrackButtonStyle}"
                                                          Command="{x:Static primitives:ScrollBar.PageUpCommand}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource IMM.DataGridScrollBarThumbStyle}" />
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton x:Name="IncreasePage"
                                                          Style="{StaticResource IMM.DataGridScrollBarTrackButtonStyle}"
                                                          Command="{x:Static primitives:ScrollBar.PageDownCommand}" />
                                        </Track.IncreaseRepeatButton>
                                    </Track>
                                </Border>

                                <RepeatButton x:Name="LineIncreaseButton"
                                              Grid.Row="2"
                                              Grid.Column="0"
                                              Grid.ColumnSpan="3"
                                              Style="{StaticResource IMM.DataGridScrollBarButtonStyle}"
                                              Command="{x:Static primitives:ScrollBar.LineDownCommand}"
                                              Tag="180" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="LineDecreaseButton" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="LineDecreaseButton" Property="Grid.RowSpan" Value="3" />
                                    <Setter TargetName="LineDecreaseButton" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="LineDecreaseButton" Property="Grid.ColumnSpan" Value="1" />
                                    <Setter TargetName="LineDecreaseButton" Property="Tag" Value="270" />
                                    <Setter TargetName="LineDecreaseButton" Property="Command" Value="{x:Static primitives:ScrollBar.LineLeftCommand}" />
                                    <Setter TargetName="TrackHost" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="TrackHost" Property="Grid.RowSpan" Value="3" />
                                    <Setter TargetName="TrackHost" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="TrackHost" Property="Grid.ColumnSpan" Value="1" />
                                    <Setter TargetName="LineIncreaseButton" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="LineIncreaseButton" Property="Grid.RowSpan" Value="3" />
                                    <Setter TargetName="LineIncreaseButton" Property="Grid.Column" Value="2" />
                                    <Setter TargetName="LineIncreaseButton" Property="Grid.ColumnSpan" Value="1" />
                                    <Setter TargetName="LineIncreaseButton" Property="Tag" Value="90" />
                                    <Setter TargetName="LineIncreaseButton" Property="Command" Value="{x:Static primitives:ScrollBar.LineRightCommand}" />
                                    <Setter TargetName="DecreasePage" Property="Command" Value="{x:Static primitives:ScrollBar.PageLeftCommand}" />
                                    <Setter TargetName="IncreasePage" Property="Command" Value="{x:Static primitives:ScrollBar.PageRightCommand}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="LineDecreaseButton" Property="IsEnabled" Value="False" />
                                    <Setter TargetName="LineIncreaseButton" Property="IsEnabled" Value="False" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IMM.ButtonBaseStyle" TargetType="Button">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                <Setter Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Normal}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="12,6" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="ui:ControlHelper.CornerRadius" Value="6" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="LayoutRoot" SnapsToDevicePixels="True">
                                <Border x:Name="TopAndLeft"
                                        Background="Transparent"
                                        BorderBrush="{DynamicResource Brush.Button.Bevel.Light}"
                                        BorderThickness="1,1,0,0"
                                        CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                        SnapsToDevicePixels="True">
                                    <Border x:Name="BottomAndRight"
                                            Background="Transparent"
                                            BorderBrush="{DynamicResource Brush.Button.Bevel.Dark}"
                                            BorderThickness="0,0,1,1"
                                            CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                            SnapsToDevicePixels="True">
                                        <Border x:Name="ChromeBorder"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="Transparent"
                                                BorderThickness="0"
                                                CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                                Padding="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="True">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="True" />
                                        </Border>
                                    </Border>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ChromeBorder" Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Hover}" />
                                    <Setter TargetName="ChromeBorder" Property="BorderBrush" Value="{DynamicResource Brush.Border.Hover}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="ChromeBorder" Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Pressed}" />
                                    <Setter TargetName="ChromeBorder" Property="BorderBrush" Value="{DynamicResource Brush.Accent.Primary}" />
                                    <Setter TargetName="TopAndLeft" Property="BorderBrush" Value="{DynamicResource Brush.Button.Bevel.Dark}" />
                                    <Setter TargetName="BottomAndRight" Property="BorderBrush" Value="{DynamicResource Brush.Button.Bevel.Light}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ChromeBorder" Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Disabled}" />
                                    <Setter TargetName="ChromeBorder" Property="BorderBrush" Value="{DynamicResource Brush.Border.Default}" />
                                    <Setter TargetName="LayoutRoot" Property="Opacity" Value="0.55" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IMM.SearchTextBoxStyle" TargetType="TextBox">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                <Setter Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Hover}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="6,3" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="SelectionBrush" Value="{DynamicResource Brush.Selection.Background}" />
                <Setter Property="SelectionTextBrush" Value="{DynamicResource Brush.Text.SelectionForeground}" />
                <Setter Property="CaretBrush" Value="{DynamicResource Brush.Text.Caret}" />
                <Setter Property="ui:ControlHelper.CornerRadius" Value="6" />
                <Setter Property="ui:ControlHelper.PlaceholderForeground" Value="{DynamicResource Brush.Text.Placeholder}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="TopAndLeft"
                                    Background="Transparent"
                                    BorderBrush="{DynamicResource Brush.SunkenSurface.Bevel.Light}"
                                    BorderThickness="0,0,1,1"
                                    CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                    SnapsToDevicePixels="True">
                                <Border x:Name="BottomAndRight"
                                        Background="Transparent"
                                        BorderBrush="{DynamicResource Brush.SunkenSurface.Bevel.Dark}"
                                        BorderThickness="1,1,0,0"
                                        CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                        SnapsToDevicePixels="True">
                                    <Border x:Name="ChromeBorder"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                            Padding="{TemplateBinding Padding}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollViewer x:Name="PART_ContentHost"
                                                          HorizontalAlignment="Stretch"
                                                          VerticalAlignment="Stretch"
                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            <TextBlock x:Name="PlaceholderTextBlock"
                                                       Margin="0"
                                                       Text="{TemplateBinding ui:ControlHelper.PlaceholderText}"
                                                       FontFamily="{TemplateBinding FontFamily}"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       Foreground="{TemplateBinding ui:ControlHelper.PlaceholderForeground}"
                                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                       IsHitTestVisible="False"
                                                       TextTrimming="CharacterEllipsis"
                                                       Visibility="Collapsed" />
                                            <Button x:Name="ClearButton"
                                                    Grid.Column="1"
                                                    Margin="6,0,0,0"
                                                    Focusable="False"
                                                    Style="{StaticResource IMM.ClearTextButtonStyle}"
                                                    ToolTip="Clear search"
                                                    AutomationProperties.Name="Clear search"
                                                    Visibility="{Binding DataContext.HasSearchText, RelativeSource={RelativeSource AncestorType=TextBox}, Converter={StaticResource IMM.BooleanToVisibilityConverter}}"
                                                    Command="{Binding DataContext.ClearSearchCommand, RelativeSource={RelativeSource AncestorType=TextBox}}">
                                                <Path Width="12"
                                                      Height="12"
                                                      Stretch="Uniform"
                                                      Stroke="{DynamicResource Brush.Text.Primary}"
                                                      StrokeThickness="1.6"
                                                      StrokeStartLineCap="Round"
                                                      StrokeEndLineCap="Round"
                                                      Data="M2,2 L10,10 M10,2 L2,10" />
                                            </Button>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ChromeBorder" Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Disabled}" />
                                    <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                                    <Setter Property="Opacity" Value="0.6" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ChromeBorder" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="ChromeBorder" Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Hover}" />
                                </Trigger>
                                <Trigger Property="Text" Value="">
                                    <Setter TargetName="PlaceholderTextBlock" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter TargetName="PlaceholderTextBlock" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IMM.ButtonBaseStyle}">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                <Setter Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Normal}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Button.Primary.Border.Normal}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="ui:ControlHelper.CornerRadius" Value="6" />
                <Setter Property="Padding" Value="8,4" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Hover}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Button.Primary.Border.Normal}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Pressed}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Button.Primary.Border.Normal}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Disabled}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Button.Primary.Border.Normal}" />
                        <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Placeholder}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="ComboBox">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                <Setter Property="Background" Value="{DynamicResource Brush.ComboBox.Background.Normal}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.ComboBox.Border.Normal}" />
                <Setter Property="Padding" Value="10,4" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="ui:ControlHelper.CornerRadius" Value="6" />
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                            <Setter Property="Background" Value="{DynamicResource Brush.ComboBox.Item.Background.Normal}" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource Brush.ComboBox.Item.Background.Hover}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource Brush.ComboBox.Item.Background.Selected}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid x:Name="Root" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="30" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="BackgroundBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                        Grid.ColumnSpan="2"
                                        RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </Border.RenderTransform>
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  IsHitTestVisible="False" />
                                <Path x:Name="DropDownGlyph"
                                      Grid.Column="1"
                                      Width="12"
                                      Height="6"
                                      Data="M 0 0 L 1 0 L 0.5 1 Z"
                                      Stretch="Fill"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Fill="{DynamicResource Brush.ComboBox.Glyph}"
                                      IsHitTestVisible="False" />
                                <ToggleButton x:Name="DropDownToggle"
                                              Grid.ColumnSpan="2"
                                              Focusable="False"
                                              Background="Transparent"
                                              BorderBrush="Transparent"
                                              BorderThickness="0"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Background="Transparent" />
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <Popup x:Name="Popup"
                                       Placement="Bottom"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <Border Background="{DynamicResource Brush.ComboBox.Popup.Background}"
                                            BorderBrush="{DynamicResource Brush.ComboBox.Popup.Border}"
                                            BorderThickness="1"
                                            CornerRadius="8"
                                            Padding="4"
                                            MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                            SnapsToDevicePixels="True">
                                        <ScrollViewer CanContentScroll="True"
                                                      HorizontalScrollBarVisibility="Auto"
                                                      VerticalScrollBarVisibility="Auto"
                                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource Brush.ComboBox.Border.Open}" />
                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource Brush.ComboBox.Background.Open}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource Brush.ComboBox.Background.Hover}" />
                                    <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource Brush.ComboBox.Border.Hover}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Placeholder}" />
                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource Brush.ComboBox.Background.Disabled}" />
                                    <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource Brush.ComboBox.Border.Disabled}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                <Setter Property="Background" Value="{DynamicResource Brush.TextInput.Background.Normal}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border.Default}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="6,4" />
                <Setter Property="ui:ControlHelper.CornerRadius" Value="4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="Root"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Root" Property="Opacity" Value="0.6" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter TargetName="Root" Property="BorderBrush" Value="{DynamicResource Brush.TextInput.Border.Focused}" />
                                    <Setter TargetName="Root" Property="Background" Value="{DynamicResource Brush.TextInput.Background.Focused}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IMM.ToggleButtonBaseStyle" TargetType="ToggleButton">
                <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                <Setter Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Normal}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border.Default}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="10,4" />
                <Setter Property="ui:ControlHelper.CornerRadius" Value="6" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid x:Name="LayoutRoot" SnapsToDevicePixels="True">
                                <Border x:Name="TopAndLeft"
                                        Background="Transparent"
                                        BorderBrush="{DynamicResource Brush.Button.Bevel.Light}"
                                        BorderThickness="1,1,0,0"
                                        CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                        SnapsToDevicePixels="True">
                                    <Border x:Name="BottomAndRight"
                                            Background="Transparent"
                                            BorderBrush="{DynamicResource Brush.Button.Bevel.Dark}"
                                            BorderThickness="0,0,1,1"
                                            CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                            SnapsToDevicePixels="True">
                                        <Border x:Name="ChromeBorder"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                                Padding="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="True">
                                            <ContentPresenter HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="True" />
                                        </Border>
                                    </Border>
                                </Border>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="LayoutRoot" Property="Opacity" Value="0.5" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsChecked" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ChromeBorder" Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Hover}" />
                                    <Setter TargetName="ChromeBorder" Property="BorderBrush" Value="{DynamicResource Brush.Border.Hover}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="True" />
                                        <Condition Property="IsChecked" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ChromeBorder" Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Pressed}" />
                                    <Setter TargetName="ChromeBorder" Property="BorderBrush" Value="{DynamicResource Brush.Accent.Primary}" />
                                    <Setter TargetName="TopAndLeft" Property="BorderBrush" Value="{DynamicResource Brush.Button.Bevel.Dark}" />
                                    <Setter TargetName="BottomAndRight" Property="BorderBrush" Value="{DynamicResource Brush.Button.Bevel.Light}" />
                                </MultiTrigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource Brush.Text.SelectionForeground}" />
                                    <Setter TargetName="ChromeBorder" Property="Background" Value="{DynamicResource Brush.ToggleButton.Background.Checked}" />
                                    <Setter TargetName="ChromeBorder" Property="BorderBrush" Value="{DynamicResource Brush.ToggleButton.Border.Checked}" />
                                    <Setter TargetName="TopAndLeft" Property="BorderBrush" Value="{DynamicResource Brush.Button.Bevel.Dark}" />
                                    <Setter TargetName="BottomAndRight" Property="BorderBrush" Value="{DynamicResource Brush.Button.Bevel.Light}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
                                    <Setter TargetName="ChromeBorder" Property="Background" Value="{DynamicResource Brush.Button.Primary.Background.Normal}" />
                                    <Setter TargetName="ChromeBorder" Property="BorderBrush" Value="{DynamicResource Brush.Border.Default}" />
                                    <Setter TargetName="TopAndLeft" Property="BorderBrush" Value="{DynamicResource Brush.Button.Bevel.Light}" />
                                    <Setter TargetName="BottomAndRight" Property="BorderBrush" Value="{DynamicResource Brush.Button.Bevel.Dark}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ToggleButton" BasedOn="{StaticResource IMM.ToggleButtonBaseStyle}" />
        </ResourceDictionary>
    </Application.Resources>
</Application>
