<Application x:Class="VintageStoryModManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:VintageStoryModManager.Converters"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemeResources />
                <ui:XamlControlsResources />
            </ResourceDictionary.MergedDictionaries>

            <Color x:Key="IMM.AccentColor">#FF4C8BF5</Color>
            <Color x:Key="IMM.SurfaceColor">#FFF6F8FB</Color>
            <Color x:Key="IMM.SurfaceAltColor">#FFEFF3F9</Color>
            <Color x:Key="IMM.BorderColor">#FFCAD7EB</Color>
            <Color x:Key="IMM.RowBorderColor">#FF8EA0C0</Color>
            <Color x:Key="IMM.BorderHoverColor">#FF7AA6F9</Color>
            <Color x:Key="IMM.ButtonBackgroundColor">#FFF9FBFF</Color>
            <Color x:Key="IMM.ButtonHoverColor">#FFE7F0FF</Color>
            <Color x:Key="IMM.ButtonPressedColor">#FFD5E3FF</Color>
            <Color x:Key="IMM.ButtonDisabledColor">#FFEEF1F6</Color>
            <Color x:Key="IMM.PlaceholderForegroundColor">#661C2635</Color>
            <Color x:Key="IMM.ForegroundColor">#FF1C2635</Color>
            <Color x:Key="IMM.SuccessColor">#FF79C46E</Color>
            <Color x:Key="IMM.RowHoverColor">#FF7AA6F9</Color>
            <Color x:Key="IMM.RowSelectionColor">#334C8BF5</Color>

            <!-- Vintage Story dialog and text colors extracted from GuiStyle -->
            <Color x:Key="VS.DialogLightBackgroundColor">#BF403529</Color>
            <Color x:Key="VS.DialogDefaultBackgroundColor">#CC403529</Color>
            <Color x:Key="VS.DialogStrongBackgroundColor">#FF403529</Color>
            <Color x:Key="VS.DialogBorderColor">#4D000000</Color>
            <Color x:Key="VS.DialogHighlightColor">#E6A88B6C</Color>
            <Color x:Key="VS.DialogAlternateBackgroundColor">#EDB5AEA6</Color>
            <Color x:Key="VS.DialogDefaultTextColor">#FFE9DDCE</Color>
            <Color x:Key="VS.DialogDarkBrownTextColor">#FF5A4530</Color>
            <Color x:Key="VS.DialogHotbarNumberTextColor">#805A4530</Color>
            <Color x:Key="VS.DialogButtonTextColor">#FFE0CFBB</Color>
            <Color x:Key="VS.DialogActiveButtonTextColor">#FFC58948</Color>
            <Color x:Key="VS.DialogDisabledTextColor">#59FFFFFF</Color>
            <Color x:Key="VS.DialogSuccessTextColor">#FF80FF80</Color>
            <Color x:Key="VS.DialogErrorTextColor">#FFFF8080</Color>
            <Color x:Key="VS.DialogWarningTextColor">#FFF2C983</Color>
            <Color x:Key="VS.DialogLinkTextColor">#FF8080FF</Color>
            <Color x:Key="VS.DialogTitleBarColor">#33000000</Color>

            <SolidColorBrush x:Key="IMM.AccentBrush" Color="{StaticResource IMM.AccentColor}" />
            <SolidColorBrush x:Key="IMM.SurfaceBrush" Color="{StaticResource IMM.SurfaceColor}" />
            <SolidColorBrush x:Key="IMM.SurfaceAltBrush" Color="{StaticResource IMM.SurfaceAltColor}" />
            <SolidColorBrush x:Key="IMM.BorderBrush" Color="{StaticResource IMM.BorderColor}" />
            <SolidColorBrush x:Key="IMM.RowBorderBrush" Color="{StaticResource IMM.RowBorderColor}" />
            <SolidColorBrush x:Key="IMM.BorderHoverBrush" Color="{StaticResource IMM.BorderHoverColor}" />
            <SolidColorBrush x:Key="IMM.ButtonBackgroundBrush"
                              x:Shared="False"
                              Color="{StaticResource IMM.ButtonBackgroundColor}" />
            <SolidColorBrush x:Key="IMM.ButtonHoverBrush"
                              x:Shared="False"
                              Color="{StaticResource IMM.ButtonHoverColor}" />
            <SolidColorBrush x:Key="IMM.ButtonPressedBrush"
                              x:Shared="False"
                              Color="{StaticResource IMM.ButtonPressedColor}" />
            <SolidColorBrush x:Key="IMM.ButtonDisabledBrush"
                              x:Shared="False"
                              Color="{StaticResource IMM.ButtonDisabledColor}" />
            <SolidColorBrush x:Key="IMM.PlaceholderForegroundBrush" Color="{StaticResource IMM.PlaceholderForegroundColor}" />
            <SolidColorBrush x:Key="IMM.ForegroundBrush" Color="{StaticResource IMM.ForegroundColor}" />
            <SolidColorBrush x:Key="IMM.BodyForegroundBrush" Color="{StaticResource IMM.ForegroundColor}" />
            <SolidColorBrush x:Key="IMM.SuccessBrush" Color="{StaticResource IMM.SuccessColor}" />
            <SolidColorBrush x:Key="IMM.RowHoverBrush" Color="{StaticResource IMM.RowHoverColor}" />
            <SolidColorBrush x:Key="IMM.RowSelectionBrush" Color="{StaticResource IMM.RowSelectionColor}" />

            <SolidColorBrush x:Key="VS.DialogLightBackgroundBrush" Color="{StaticResource VS.DialogLightBackgroundColor}" />
            <SolidColorBrush x:Key="VS.DialogDefaultBackgroundBrush" Color="{StaticResource VS.DialogDefaultBackgroundColor}" />
            <SolidColorBrush x:Key="VS.DialogStrongBackgroundBrush" Color="{StaticResource VS.DialogStrongBackgroundColor}" />
            <SolidColorBrush x:Key="VS.DialogBorderBrush" Color="{StaticResource VS.DialogBorderColor}" />
            <SolidColorBrush x:Key="VS.DialogHighlightBrush" Color="{StaticResource VS.DialogHighlightColor}" />
            <SolidColorBrush x:Key="VS.DialogAlternateBackgroundBrush" Color="{StaticResource VS.DialogAlternateBackgroundColor}" />
            <SolidColorBrush x:Key="VS.DialogDefaultTextBrush" Color="{StaticResource VS.DialogDefaultTextColor}" />
            <SolidColorBrush x:Key="VS.DialogDarkBrownTextBrush" Color="{StaticResource VS.DialogDarkBrownTextColor}" />
            <SolidColorBrush x:Key="VS.DialogHotbarNumberTextBrush" Color="{StaticResource VS.DialogHotbarNumberTextColor}" />
            <SolidColorBrush x:Key="VS.DialogButtonTextBrush" Color="{StaticResource VS.DialogButtonTextColor}" />
            <SolidColorBrush x:Key="VS.DialogActiveButtonTextBrush" Color="{StaticResource VS.DialogActiveButtonTextColor}" />
            <SolidColorBrush x:Key="VS.DialogDisabledTextBrush" Color="{StaticResource VS.DialogDisabledTextColor}" />
            <SolidColorBrush x:Key="VS.DialogSuccessTextBrush" Color="{StaticResource VS.DialogSuccessTextColor}" />
            <SolidColorBrush x:Key="VS.DialogErrorTextBrush" Color="{StaticResource VS.DialogErrorTextColor}" />
            <SolidColorBrush x:Key="VS.DialogWarningTextBrush" Color="{StaticResource VS.DialogWarningTextColor}" />
            <SolidColorBrush x:Key="VS.DialogLinkTextBrush" Color="{StaticResource VS.DialogLinkTextColor}" />
            <SolidColorBrush x:Key="VS.DialogTitleBarBrush" Color="{StaticResource VS.DialogTitleBarColor}" />

            <BooleanToVisibilityConverter x:Key="IMM.BooleanToVisibilityConverter" />
            <converters:ScaledThicknessConverter x:Key="IMM.ScaledThicknessConverter" />
            <converters:ScaledDoubleConverter x:Key="IMM.ScaledDoubleConverter" />

            <Style x:Key="IMM.ClearTextButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="24" />
                <Setter Property="Height" Value="24" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="12">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource IMM.ButtonHoverBrush}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource IMM.ButtonPressedBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                    <Setter Property="Opacity" Value="0.6" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button">
                <Setter Property="Foreground" Value="{StaticResource IMM.ForegroundBrush}" />
                <Setter Property="Background" Value="{StaticResource IMM.ButtonBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource IMM.BorderBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="12,6" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="ui:ControlHelper.CornerRadius" Value="6" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Root"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="True"
                                    RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Border.RenderTransform>
                                <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Root"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="{StaticResource IMM.ButtonBackgroundColor}"
                                                            Duration="0:0:0.15">
                                                <ColorAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut" />
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                            <ColorAnimation Storyboard.TargetName="Root"
                                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="{StaticResource IMM.BorderColor}"
                                                            Duration="0:0:0.15">
                                                <ColorAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut" />
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                            <DoubleAnimation Storyboard.TargetName="Root"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                             To="1"
                                                             Duration="0:0:0.1" />
                                            <DoubleAnimation Storyboard.TargetName="Root"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                             To="1"
                                                             Duration="0:0:0.1" />
                                            <DoubleAnimation Storyboard.TargetName="Root"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0:0:0.1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Root"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="{StaticResource IMM.ButtonHoverColor}"
                                                            Duration="0:0:0.15">
                                                <ColorAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut" />
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                            <ColorAnimation Storyboard.TargetName="Root"
                                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="{StaticResource IMM.BorderHoverColor}"
                                                            Duration="0:0:0.15">
                                                <ColorAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut" />
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                            <DoubleAnimation Storyboard.TargetName="Root"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                             To="1.01"
                                                             Duration="0:0:0.12">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetName="Root"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                             To="1.01"
                                                             Duration="0:0:0.12">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Root"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="{StaticResource IMM.ButtonPressedColor}"
                                                            Duration="0:0:0.05" />
                                            <ColorAnimation Storyboard.TargetName="Root"
                                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="{StaticResource IMM.AccentColor}"
                                                            Duration="0:0:0.05" />
                                            <DoubleAnimation Storyboard.TargetName="Root"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                             To="0.975"
                                                             Duration="0:0:0.05" />
                                            <DoubleAnimation Storyboard.TargetName="Root"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                             To="0.975"
                                                             Duration="0:0:0.05" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Root"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="{StaticResource IMM.ButtonDisabledColor}"
                                                            Duration="0:0:0.15" />
                                            <DoubleAnimation Storyboard.TargetName="Root"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.55"
                                                             Duration="0:0:0.1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="True" />
                            </Border>
                            
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IMM.SearchTextBoxStyle" TargetType="TextBox">
                <Setter Property="Foreground" Value="{StaticResource IMM.ForegroundBrush}" />
                <Setter Property="Background" Value="{StaticResource IMM.ButtonBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource IMM.BorderBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="6,3" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="SelectionBrush" Value="{StaticResource IMM.AccentBrush}" />
                <Setter Property="SelectionTextBrush" Value="White" />
                <Setter Property="CaretBrush" Value="{StaticResource IMM.AccentBrush}" />
                <Setter Property="ui:ControlHelper.CornerRadius" Value="6" />
                <Setter Property="ui:ControlHelper.PlaceholderForeground" Value="{StaticResource IMM.PlaceholderForegroundBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                    Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ScrollViewer x:Name="PART_ContentHost"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <TextBlock x:Name="PlaceholderTextBlock"
                                               Margin="0"
                                               Text="{TemplateBinding ui:ControlHelper.PlaceholderText}"
                                               FontFamily="{TemplateBinding FontFamily}"
                                               FontSize="{TemplateBinding FontSize}"
                                               Foreground="{TemplateBinding ui:ControlHelper.PlaceholderForeground}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               IsHitTestVisible="False"
                                               TextTrimming="CharacterEllipsis"
                                               Visibility="Collapsed" />
                                    <Button x:Name="ClearButton"
                                            Grid.Column="1"
                                            Margin="6,0,0,0"
                                            Focusable="False"
                                            Style="{StaticResource IMM.ClearTextButtonStyle}"
                                            ToolTip="Clear search"
                                            AutomationProperties.Name="Clear search"
                                            Visibility="{Binding DataContext.HasSearchText, RelativeSource={RelativeSource AncestorType=TextBox}, Converter={StaticResource IMM.BooleanToVisibilityConverter}}"
                                            Command="{Binding DataContext.ClearSearchCommand, RelativeSource={RelativeSource AncestorType=TextBox}}">
                                        <Path Width="12"
                                              Height="12"
                                              Stretch="Uniform"
                                              Stroke="{StaticResource IMM.ForegroundBrush}"
                                              StrokeThickness="1.6"
                                              StrokeStartLineCap="Round"
                                              StrokeEndLineCap="Round"
                                              Data="M2,2 L10,10 M10,2 L2,10" />
                                    </Button>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource IMM.ButtonDisabledBrush}" />
                                    <Setter Property="Foreground" Value="{StaticResource IMM.ForegroundBrush}" />
                                    <Setter Property="Opacity" Value="0.6" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource IMM.BorderHoverBrush}" />
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource IMM.ButtonHoverBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource IMM.AccentBrush}" />
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource IMM.ButtonPressedBrush}" />
                                </Trigger>
                                <Trigger Property="Text" Value="">
                                    <Setter TargetName="PlaceholderTextBlock" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter TargetName="PlaceholderTextBlock" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ComboBox">
                <Setter Property="Foreground" Value="{StaticResource IMM.ForegroundBrush}" />
                <Setter Property="Background" Value="{StaticResource IMM.ButtonBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource IMM.BorderBrush}" />
                <Setter Property="Padding" Value="10,4" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="ui:ControlHelper.CornerRadius" Value="6" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid x:Name="Root" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="30" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="BackgroundBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                        Grid.ColumnSpan="2"
                                        RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </Border.RenderTransform>
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  IsHitTestVisible="False" />
                                <Path x:Name="DropDownGlyph"
                                      Grid.Column="1"
                                      Width="12"
                                      Height="6"
                                      Data="M 0 0 L 1 0 L 0.5 1 Z"
                                      Stretch="Fill"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Fill="{StaticResource IMM.ForegroundBrush}"
                                      IsHitTestVisible="False" />
                                <ToggleButton x:Name="DropDownToggle"
                                              Grid.ColumnSpan="2"
                                              Focusable="False"
                                              Background="Transparent"
                                              BorderBrush="Transparent"
                                              BorderThickness="0"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Background="Transparent" />
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <Popup x:Name="Popup"
                                       Placement="Bottom"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       PopupAnimation="Slide"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <Border Background="{StaticResource IMM.SurfaceBrush}"
                                            BorderBrush="{StaticResource IMM.BorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="8"
                                            Padding="4"
                                            MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                            SnapsToDevicePixels="True">
                                        <ScrollViewer CanContentScroll="True"
                                                      HorizontalScrollBarVisibility="Auto"
                                                      VerticalScrollBarVisibility="Auto"
                                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource IMM.AccentBrush}" />
                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource IMM.ButtonHoverBrush}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BackgroundBorder"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                To="{StaticResource IMM.ButtonHoverColor}"
                                                                Duration="0:0:0.15">
                                                    <ColorAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut" />
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                                <ColorAnimation Storyboard.TargetName="BackgroundBorder"
                                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                                To="{StaticResource IMM.BorderHoverColor}"
                                                                Duration="0:0:0.15">
                                                    <ColorAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut" />
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="BackgroundBorder"
                                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                                 To="1.01"
                                                                 Duration="0:0:0.12" />
                                                <DoubleAnimation Storyboard.TargetName="BackgroundBorder"
                                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                                 To="1.01"
                                                                 Duration="0:0:0.12" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BackgroundBorder"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                To="{StaticResource IMM.ButtonBackgroundColor}"
                                                                Duration="0:0:0.15">
                                                    <ColorAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut" />
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                                <ColorAnimation Storyboard.TargetName="BackgroundBorder"
                                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                                To="{StaticResource IMM.BorderColor}"
                                                                Duration="0:0:0.15">
                                                    <ColorAnimation.EasingFunction>
                                                        <QuadraticEase EasingMode="EaseOut" />
                                                    </ColorAnimation.EasingFunction>
                                                </ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="BackgroundBorder"
                                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                                 To="1"
                                                                 Duration="0:0:0.12" />
                                                <DoubleAnimation Storyboard.TargetName="BackgroundBorder"
                                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                                 To="1"
                                                                 Duration="0:0:0.12" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="#66000000" />
                                    <Setter TargetName="BackgroundBorder" Property="Opacity" Value="0.6" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Foreground" Value="{StaticResource IMM.ForegroundBrush}" />
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="{StaticResource IMM.BorderBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="6,4" />
                <Setter Property="ui:ControlHelper.CornerRadius" Value="4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="Root"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Root" Property="Opacity" Value="0.6" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Root"
                                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                                To="{StaticResource IMM.AccentColor}"
                                                                Duration="0:0:0.12" />
                                                <ColorAnimation Storyboard.TargetName="Root"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                To="{StaticResource IMM.ButtonHoverColor}"
                                                                Duration="0:0:0.12" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Root"
                                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                                To="{StaticResource IMM.BorderColor}"
                                                                Duration="0:0:0.12" />
                                                <ColorAnimation Storyboard.TargetName="Root"
                                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                To="White"
                                                                Duration="0:0:0.12" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IMM.ToggleButtonBaseStyle" TargetType="ToggleButton">
                <Setter Property="Foreground" Value="{StaticResource IMM.ForegroundBrush}" />
                <Setter Property="Background" Value="{StaticResource IMM.ButtonBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource IMM.BorderBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Padding" Value="10,4" />
                <Setter Property="ui:ControlHelper.CornerRadius" Value="6" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="Root"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding ui:ControlHelper.CornerRadius}"
                                    Padding="{TemplateBinding Padding}"
                                    RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Border.RenderTransform>
                                <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Root"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="{StaticResource IMM.ButtonHoverColor}"
                                                            Duration="0:0:0.15" />
                                                <ColorAnimation Storyboard.TargetName="Root"
                                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="{StaticResource IMM.BorderHoverColor}"
                                                            Duration="0:0:0.15" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Root"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.5"
                                                             Duration="0:0:0.1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Root"
                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                            To="{StaticResource IMM.AccentColor}"
                                                            Duration="0:0:0.15" />
                                            <ColorAnimation Storyboard.TargetName="Root"
                                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                            To="{StaticResource IMM.AccentColor}"
                                                            Duration="0:0:0.15" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter TargetName="Root"
                                            Property="Background"
                                            Value="{StaticResource IMM.AccentBrush}" />
                                    <Setter TargetName="Root"
                                            Property="BorderBrush"
                                            Value="{StaticResource IMM.AccentBrush}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource IMM.ForegroundBrush}" />
                                    <Setter TargetName="Root"
                                            Property="Background"
                                            Value="{StaticResource IMM.ButtonBackgroundBrush}" />
                                    <Setter TargetName="Root"
                                            Property="BorderBrush"
                                            Value="{StaticResource IMM.BorderBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ToggleButton" BasedOn="{StaticResource IMM.ToggleButtonBaseStyle}" />
        </ResourceDictionary>
    </Application.Resources>
</Application>
